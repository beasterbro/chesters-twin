4,6c4,6
< 	.p2align	4, 0x90         # -- Begin function 
< 	.type	__unnamed_1,@function
< __unnamed_1:                            # @7
---
> 	.p2align	4, 0x90         # -- Begin function __cxx_global_var_init
> 	.type	__cxx_global_var_init,@function
> __cxx_global_var_init:                  # @__cxx_global_var_init
14c14
< 	movl	$__unnamed_2, %edi
---
> 	movl	$_ZStL8__ioinit, %edi
17c17
< 	movl	$__unnamed_2, %esi
---
> 	movl	$_ZStL8__ioinit, %esi
18a19
> 	callq	__cxa_atexit
21c22
< 	jmp	__cxa_atexit            # TAILCALL
---
> 	retq
23c24
< 	.size	__unnamed_1, .Lfunc_end0-__unnamed_1
---
> 	.size	__cxx_global_var_init, .Lfunc_end0-__cxx_global_var_init
38d38
< 	pushq	%r15
40,41d39
< 	pushq	%r13
< 	pushq	%r12
43,61c41,49
< 	pushq	%rax
< 	.cfi_offset %rbx, -56
< 	.cfi_offset %r12, -48
< 	.cfi_offset %r13, -40
< 	.cfi_offset %r14, -32
< 	.cfi_offset %r15, -24
< 	movq	%rsi, %r15
< 	movq	%rdi, %r14
< 	movl	$0, -44(%rbp)
< 	movq	%rsi, %rdi
< 	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv
< 	testq	%rax, %rax
< 	je	.LBB1_6
< # %bb.1:                                # %.lr.ph
< 	xorl	%ebx, %ebx
< 	leaq	-44(%rbp), %r12
< 	jmp	.LBB1_2
< 	.p2align	4, 0x90
< .LBB1_4:                                #   in Loop: Header=BB1_2 Depth=1
---
> 	subq	$16, %rsp
> 	.cfi_offset %rbx, -32
> 	.cfi_offset %r14, -24
> 	movq	%rsi, %r14
> 	movq	%rdi, -32(%rbp)
> 	movl	$0, -24(%rbp)
> 	movl	$0, -20(%rbp)
> .LBB1_1:                                # =>This Inner Loop Header: Depth=1
> 	movslq	-20(%rbp), %rbx
63,69d50
< 	movq	%r12, %rsi
< 	callq	_ZNSt6vectorIiSaIiEE9push_backERKi
< 	movl	$0, -44(%rbp)
< .LBB1_5:                                #   in Loop: Header=BB1_2 Depth=1
< 	addq	$1, %rbx
< 	movslq	%ebx, %r13
< 	movq	%r15, %rdi
71,75c52,56
< 	cmpq	%rax, %r13
< 	jae	.LBB1_6
< .LBB1_2:                                # =>This Inner Loop Header: Depth=1
< 	movq	%r15, %rdi
< 	movq	%rbx, %rsi
---
> 	cmpq	%rax, %rbx
> 	jae	.LBB1_7
> # %bb.2:                                #   in Loop: Header=BB1_1 Depth=1
> 	movslq	-20(%rbp), %rsi
> 	movq	%r14, %rdi
79c60
< 	testl	%eax, %eax
---
> 	cmpl	$0, %eax
81,85c62,65
< # %bb.3:                                #   in Loop: Header=BB1_2 Depth=1
< 	movl	-44(%rbp), %eax
< 	leal	(%rax,%rax,4), %r13d
< 	movq	%r15, %rdi
< 	movq	%rbx, %rsi
---
> # %bb.3:                                #   in Loop: Header=BB1_1 Depth=1
> 	imull	$10, -24(%rbp), %ebx
> 	movslq	-20(%rbp), %rsi
> 	movq	%r14, %rdi
88,90c68,70
< 	leal	(%rax,%r13,2), %eax
< 	addl	$-48, %eax
< 	movl	%eax, -44(%rbp)
---
> 	subl	$48, %eax
> 	addl	%eax, %ebx
> 	movl	%ebx, -24(%rbp)
92,94c72,74
< .LBB1_6:
< 	leaq	-44(%rbp), %rsi
< 	movq	%r14, %rdi
---
> .LBB1_4:                                #   in Loop: Header=BB1_1 Depth=1
> 	movq	-32(%rbp), %rdi
> 	leaq	-24(%rbp), %rsi
96c76,88
< 	addq	$8, %rsp
---
> 	movl	$0, -24(%rbp)
> .LBB1_5:                                #   in Loop: Header=BB1_1 Depth=1
> 	jmp	.LBB1_6
> .LBB1_6:                                #   in Loop: Header=BB1_1 Depth=1
> 	movl	-20(%rbp), %eax
> 	addl	$1, %eax
> 	movl	%eax, -20(%rbp)
> 	jmp	.LBB1_1
> .LBB1_7:
> 	movq	-32(%rbp), %rdi
> 	leaq	-24(%rbp), %rsi
> 	callq	_ZNSt6vectorIiSaIiEE9push_backERKi
> 	addq	$16, %rsp
98,99d89
< 	popq	%r12
< 	popq	%r13
101d90
< 	popq	%r15
121d109
< 	pushq	%r14
123,128c111,117
< 	.cfi_offset %rbx, -32
< 	.cfi_offset %r14, -24
< 	movq	%rsi, %r14
< 	movq	%rdi, %rbx
< 	movq	8(%rdi), %rax
< 	cmpq	16(%rdi), %rax
---
> 	subq	$24, %rsp
> 	.cfi_offset %rbx, -24
> 	movq	%rdi, -32(%rbp)
> 	movq	%rsi, -16(%rbp)
> 	movq	-32(%rbp), %rbx
> 	movq	8(%rbx), %rax
> 	cmpq	16(%rbx), %rax
131a121
> 	movq	-16(%rbp), %rdx
133d122
< 	movq	%r14, %rdx
135,140c124,127
< 	addq	$4, 8(%rbx)
< 	popq	%rbx
< 	popq	%r14
< 	popq	%rbp
< 	.cfi_def_cfa %rsp, 8
< 	retq
---
> 	movq	8(%rbx), %rax
> 	addq	$4, %rax
> 	movq	%rax, 8(%rbx)
> 	jmp	.LBB2_3
142d128
< 	.cfi_def_cfa %rbp, 16
144a131,133
> 	movq	%rax, -24(%rbp)
> 	movq	-16(%rbp), %rdx
> 	movq	-24(%rbp), %rsi
146,147c135,137
< 	movq	%rax, %rsi
< 	movq	%r14, %rdx
---
> 	callq	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
> .LBB2_3:
> 	addq	$24, %rsp
149d138
< 	popq	%r14
152c141
< 	jmp	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_ # TAILCALL
---
> 	retq
169,170d157
< 	pushq	%r15
< 	pushq	%r14
172,178c159,165
< 	subq	$72, %rsp
< 	.cfi_offset %rbx, -40
< 	.cfi_offset %r14, -32
< 	.cfi_offset %r15, -24
< 	movl	%esi, %ebx
< 	movq	%rdi, %r15
< 	leal	1(%rbx), %eax
---
> 	subq	$104, %rsp
> 	.cfi_offset %rbx, -24
> 	movq	%rdi, -24(%rbp)
> 	movl	%esi, -12(%rbp)
> 	movq	-24(%rbp), %rdi
> 	movl	-12(%rbp), %eax
> 	addl	$1, %eax
183c170,171
< 	movq	%r15, %rdi
---
> 	movq	-24(%rbp), %rbx
> 	movq	-24(%rbp), %rdi
186c174
< 	movslq	%ebx, %r14
---
> 	movslq	-12(%rbp), %rsi
188d175
< 	movq	%r14, %rsi
199c186
< 	movq	%r15, %rdi
---
> 	movq	%rbx, %rdi
201c188,190
< 	movq	%r15, %rdi
---
> 	movq	%rax, -104(%rbp)
> 	movq	-24(%rbp), %rbx
> 	movq	-24(%rbp), %rdi
203a193
> 	movslq	-12(%rbp), %rsi
205d194
< 	movq	%r14, %rsi
211a201
> 	movq	%rbx, %rdi
213d202
< 	movq	%r15, %rdi
215c204,205
< 	addq	$72, %rsp
---
> 	movq	%rax, -96(%rbp)
> 	addq	$104, %rsp
217,218d206
< 	popq	%r14
< 	popq	%r15
238d225
< 	pushq	%r14
240,243c227,233
< 	.cfi_offset %rbx, -32
< 	.cfi_offset %r14, -24
< 	movq	%rsi, %r14
< 	movq	%rdi, %rbx
---
> 	subq	$24, %rsp
> 	.cfi_offset %rbx, -24
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -16(%rbp)
> 	movq	-24(%rbp), %rbx
> 	movq	-16(%rbp), %rsi
> 	movq	%rbx, %rdi
244a235
> 	movq	-16(%rbp), %rsi
246c237,238
< 	movq	%r14, %rsi
---
> 	callq	_ZNSt6vectorIiSaIiEEixEm
> 	addq	$24, %rsp
248d239
< 	popq	%r14
251c242
< 	jmp	_ZNSt6vectorIiSaIiEEixEm # TAILCALL
---
> 	retq
269c260
< 	subq	$24, %rsp
---
> 	subq	$56, %rsp
271,272c262,265
< 	movq	%rdi, %rbx
< 	movq	%rsi, -32(%rbp)
---
> 	movq	%rsi, -48(%rbp)
> 	movq	%rdi, -40(%rbp)
> 	movq	-40(%rbp), %rbx
> 	movq	%rbx, %rdi
278c271
< 	leaq	-32(%rbp), %rdi
---
> 	leaq	-48(%rbp), %rdi
283a277,278
> 	movq	%rax, -32(%rbp)
> 	movq	-32(%rbp), %rsi
285d279
< 	movq	%rax, %rsi
287c281,283
< 	addq	$24, %rsp
---
> 	movq	%rax, -56(%rbp)
> 	movq	-56(%rbp), %rax
> 	addq	$56, %rsp
309,310c305,307
< 	movq	%rdi, %rsi
< 	leaq	-8(%rbp), %rdi
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rsi
> 	leaq	-16(%rbp), %rdi
312c309
< 	movq	-8(%rbp), %rax
---
> 	movq	-16(%rbp), %rax
333,337c330,339
< 	subq	$16, %rsp
< 	shlq	$2, %rsi
< 	addq	(%rdi), %rsi
< 	movq	%rsi, -8(%rbp)
< 	leaq	-16(%rbp), %rdi
---
> 	subq	$32, %rsp
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -16(%rbp)
> 	movq	-24(%rbp), %rax
> 	movq	(%rax), %rax
> 	movq	-16(%rbp), %rcx
> 	shlq	$2, %rcx
> 	addq	%rcx, %rax
> 	movq	%rax, -8(%rbp)
> 	leaq	-32(%rbp), %rdi
340,341c342,343
< 	movq	-16(%rbp), %rax
< 	addq	$16, %rsp
---
> 	movq	-32(%rbp), %rax
> 	addq	$32, %rsp
362c364
< 	pushq	%rax
---
> 	subq	$24, %rsp
364,365c366,369
< 	movq	%rdi, %rbx
< 	movq	%rsi, %rdi
---
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -16(%rbp)
> 	movq	-24(%rbp), %rbx
> 	movq	-16(%rbp), %rdi
369c373
< 	addq	$8, %rsp
---
> 	addq	$24, %rsp
382a387
> .Lfunc_begin0:
383a389,390
> 	.cfi_personality 3, __gxx_personality_v0
> 	.cfi_lsda 3, .Lexception0
390d396
< 	pushq	%r15
392,393d397
< 	pushq	%r13
< 	pushq	%r12
395,403c399,406
< 	subq	$88, %rsp
< 	.cfi_offset %rbx, -56
< 	.cfi_offset %r12, -48
< 	.cfi_offset %r13, -40
< 	.cfi_offset %r14, -32
< 	.cfi_offset %r15, -24
< 	movq	%rdx, %r15
< 	movq	%rdi, %rbx
< 	movq	%rsi, -48(%rbp)
---
> 	subq	$160, %rsp
> 	.cfi_offset %rbx, -32
> 	.cfi_offset %r14, -24
> 	movq	%rsi, -24(%rbp)
> 	movq	%rdi, -136(%rbp)
> 	movq	%rdx, -32(%rbp)
> 	movq	-136(%rbp), %rbx
> 	movq	%rbx, %rdi
405,407c408,410
< 	movq	%rax, -104(%rbp)
< 	leaq	-48(%rbp), %rdi
< 	leaq	-104(%rbp), %rsi
---
> 	movq	%rax, -120(%rbp)
> 	leaq	-24(%rbp), %rdi
> 	leaq	-120(%rbp), %rsi
409c412
< 	movq	%rax, %r14
---
> 	movq	%rax, -128(%rbp)
412c415
< 	je	.LBB9_4
---
> 	je	.LBB9_8
416,418c419,421
< 	movq	%rax, -96(%rbp)
< 	leaq	-48(%rbp), %rdi
< 	leaq	-96(%rbp), %rsi
---
> 	movq	%rax, -112(%rbp)
> 	leaq	-24(%rbp), %rdi
> 	leaq	-112(%rbp), %rsi
420,422c423,426
< 	testb	%al, %al
< 	je	.LBB9_3
< # %bb.2:
---
> 	testb	$1, %al
> 	jne	.LBB9_2
> 	jmp	.LBB9_3
> .LBB9_2:
423a428
> 	movq	-32(%rbp), %rdx
425d429
< 	movq	%r15, %rdx
427,446c431,434
< 	addq	$4, 8(%rbx)
< 	jmp	.LBB9_5
< .LBB9_4:
< 	movq	%rbx, %rdi
< 	callq	_ZNSt6vectorIiSaIiEE5beginEv
< 	movq	%rax, -72(%rbp)
< 	movq	%rbx, %rdi
< 	callq	_ZNKSt6vectorIiSaIiEE6cbeginEv
< 	movq	%rax, -64(%rbp)
< 	leaq	-48(%rbp), %rdi
< 	leaq	-64(%rbp), %rsi
< 	callq	_ZN9__gnu_cxxmiIPKiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_
< 	leaq	-72(%rbp), %rdi
< 	movq	%rax, %rsi
< 	callq	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl
< 	movq	%rbx, %rdi
< 	movq	%rax, %rsi
< 	movq	%r15, %rdx
< 	callq	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
< 	jmp	.LBB9_5
---
> 	movq	8(%rbx), %rax
> 	addq	$4, %rax
> 	movq	%rax, 8(%rbx)
> 	jmp	.LBB9_7
450c438
< 	movq	%rax, -88(%rbp)
---
> 	movq	%rax, -96(%rbp)
453,455c441,443
< 	movq	%rax, -80(%rbp)
< 	leaq	-48(%rbp), %rdi
< 	leaq	-80(%rbp), %rsi
---
> 	movq	%rax, -88(%rbp)
> 	leaq	-24(%rbp), %rdi
> 	leaq	-88(%rbp), %rsi
457c445
< 	leaq	-88(%rbp), %rdi
---
> 	leaq	-96(%rbp), %rdi
460,462c448,451
< 	movq	%rax, %r12
< 	leaq	-128(%rbp), %r13
< 	movq	%r13, %rdi
---
> 	movq	%rax, -104(%rbp)
> 	movq	-32(%rbp), %rdx
> 	leaq	-168(%rbp), %r14
> 	movq	%r14, %rdi
464d452
< 	movq	%r15, %rdx
466c454,457
< 	movq	%r13, %rdi
---
> 	movq	-104(%rbp), %rax
> 	movq	%rax, -80(%rbp)
> .Ltmp0:
> 	movq	%r14, %rdi
467a459,461
> .Ltmp1:
> 	jmp	.LBB9_4
> .LBB9_4:
469a464,465
> 	movq	-80(%rbp), %rsi
> .Ltmp2:
471d466
< 	movq	%r12, %rsi
474,475c469,470
< 	movq	%r13, %rdi
< 	callq	_ZNSt6vectorIiSaIiEE16_Temporary_valueD2Ev
---
> .Ltmp3:
> 	jmp	.LBB9_5
477,481c472,509
< 	shlq	$2, %r14
< 	addq	(%rbx), %r14
< 	movq	%r14, -56(%rbp)
< 	leaq	-112(%rbp), %rdi
< 	leaq	-56(%rbp), %rsi
---
> 	leaq	-168(%rbp), %rdi
> 	callq	_ZNSt6vectorIiSaIiEE16_Temporary_valueD2Ev
> 	jmp	.LBB9_7
> .LBB9_6:
> .Ltmp4:
> 	movq	%rax, -72(%rbp)
> 	movl	%edx, -148(%rbp)
> 	leaq	-168(%rbp), %rdi
> 	callq	_ZNSt6vectorIiSaIiEE16_Temporary_valueD2Ev
> 	jmp	.LBB9_10
> .LBB9_7:
> 	jmp	.LBB9_9
> .LBB9_8:
> 	movq	%rbx, %rdi
> 	callq	_ZNSt6vectorIiSaIiEE5beginEv
> 	movq	%rax, -56(%rbp)
> 	movq	%rbx, %rdi
> 	callq	_ZNKSt6vectorIiSaIiEE6cbeginEv
> 	movq	%rax, -48(%rbp)
> 	leaq	-24(%rbp), %rdi
> 	leaq	-48(%rbp), %rsi
> 	callq	_ZN9__gnu_cxxmiIPKiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_
> 	leaq	-56(%rbp), %rdi
> 	movq	%rax, %rsi
> 	callq	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl
> 	movq	%rax, -64(%rbp)
> 	movq	-32(%rbp), %rdx
> 	movq	-64(%rbp), %rsi
> 	movq	%rbx, %rdi
> 	callq	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
> .LBB9_9:
> 	movq	(%rbx), %rax
> 	movq	-128(%rbp), %rcx
> 	shlq	$2, %rcx
> 	addq	%rcx, %rax
> 	movq	%rax, -40(%rbp)
> 	leaq	-144(%rbp), %rdi
> 	leaq	-40(%rbp), %rsi
483,484c511,512
< 	movq	-112(%rbp), %rax
< 	addq	$88, %rsp
---
> 	movq	-144(%rbp), %rax
> 	addq	$160, %rsp
486,487d513
< 	popq	%r12
< 	popq	%r13
489d514
< 	popq	%r15
492a518,521
> .LBB9_10:
> 	.cfi_def_cfa %rbp, 16
> 	movq	-72(%rbp), %rdi
> 	callq	_Unwind_Resume
495a525,547
> 	.section	.gcc_except_table,"a",@progbits
> 	.p2align	2
> GCC_except_table9:
> .Lexception0:
> 	.byte	255                     # @LPStart Encoding = omit
> 	.byte	255                     # @TType Encoding = omit
> 	.byte	1                       # Call site Encoding = uleb128
> 	.uleb128 .Lcst_end0-.Lcst_begin0
> .Lcst_begin0:
> 	.uleb128 .Lfunc_begin0-.Lfunc_begin0 # >> Call Site 1 <<
> 	.uleb128 .Ltmp0-.Lfunc_begin0   #   Call between .Lfunc_begin0 and .Ltmp0
> 	.byte	0                       #     has no landing pad
> 	.byte	0                       #   On action: cleanup
> 	.uleb128 .Ltmp0-.Lfunc_begin0   # >> Call Site 2 <<
> 	.uleb128 .Ltmp3-.Ltmp0          #   Call between .Ltmp0 and .Ltmp3
> 	.uleb128 .Ltmp4-.Lfunc_begin0   #     jumps to .Ltmp4
> 	.byte	0                       #   On action: cleanup
> 	.uleb128 .Ltmp3-.Lfunc_begin0   # >> Call Site 3 <<
> 	.uleb128 .Lfunc_end9-.Ltmp3     #   Call between .Ltmp3 and .Lfunc_end9
> 	.byte	0                       #     has no landing pad
> 	.byte	0                       #   On action: cleanup
> .Lcst_end0:
> 	.p2align	2
509,512d560
< 	pushq	%r15
< 	pushq	%r14
< 	pushq	%r13
< 	pushq	%r12
515,554c563,576
< 	.cfi_offset %rbx, -56
< 	.cfi_offset %r12, -48
< 	.cfi_offset %r13, -40
< 	.cfi_offset %r14, -32
< 	.cfi_offset %r15, -24
<                                         # kill: def $esi killed $esi def $rsi
< 	movq	%rsi, %rax
< 	movq	%rsi, -56(%rbp)         # 8-byte Spill
< 	leal	-1(%rsi), %eax
< 	movl	%eax, -44(%rbp)         # 4-byte Spill
< 	testl	%eax, %eax
< 	jle	.LBB10_8
< # %bb.1:                                # %.lr.ph16
< 	movq	%rdi, %r15
< 	xorl	%eax, %eax
< 	jmp	.LBB10_2
< 	.p2align	4, 0x90
< .LBB10_7:                               #   in Loop: Header=BB10_2 Depth=1
< 	movq	-64(%rbp), %rax         # 8-byte Reload
< 	addl	$1, %eax
< 	cmpl	-44(%rbp), %eax         # 4-byte Folded Reload
< 	jge	.LBB10_8
< .LBB10_2:                               # =>This Loop Header: Depth=1
<                                         #     Child Loop BB10_4 Depth 2
< 	movq	%rax, -64(%rbp)         # 8-byte Spill
< 	movl	%eax, %r13d
< 	notl	%r13d
< 	addl	-56(%rbp), %r13d        # 4-byte Folded Reload
< 	testl	%r13d, %r13d
< 	jle	.LBB10_7
< # %bb.3:                                # %.lr.ph
<                                         #   in Loop: Header=BB10_2 Depth=1
< 	xorl	%ebx, %ebx
< 	jmp	.LBB10_4
< 	.p2align	4, 0x90
< .LBB10_6:                               #   in Loop: Header=BB10_4 Depth=2
< 	movq	%r12, %rbx
< 	cmpl	%r13d, %r12d
< 	jge	.LBB10_7
< .LBB10_4:                               #   Parent Loop BB10_2 Depth=1
---
> 	.cfi_offset %rbx, -24
> 	movq	%rdi, -32(%rbp)
> 	movl	%esi, -20(%rbp)
> 	movl	$0, -16(%rbp)
> .LBB10_1:                               # =>This Loop Header: Depth=1
>                                         #     Child Loop BB10_3 Depth 2
> 	movl	-16(%rbp), %eax
> 	movl	-20(%rbp), %ecx
> 	subl	$1, %ecx
> 	cmpl	%ecx, %eax
> 	jge	.LBB10_10
> # %bb.2:                                #   in Loop: Header=BB10_1 Depth=1
> 	movl	$0, -12(%rbp)
> .LBB10_3:                               #   Parent Loop BB10_1 Depth=1
556,557c578,586
< 	movq	%r15, %rdi
< 	movq	%rbx, %rsi
---
> 	movl	-12(%rbp), %eax
> 	movl	-20(%rbp), %ecx
> 	subl	-16(%rbp), %ecx
> 	subl	$1, %ecx
> 	cmpl	%ecx, %eax
> 	jge	.LBB10_8
> # %bb.4:                                #   in Loop: Header=BB10_3 Depth=2
> 	movq	-32(%rbp), %rdi
> 	movslq	-12(%rbp), %rsi
559,562c588,592
< 	movl	(%rax), %r14d
< 	leaq	1(%rbx), %r12
< 	movq	%r15, %rdi
< 	movq	%r12, %rsi
---
> 	movl	(%rax), %ebx
> 	movq	-32(%rbp), %rdi
> 	movl	-12(%rbp), %eax
> 	addl	$1, %eax
> 	movslq	%eax, %rsi
564c594
< 	cmpl	(%rax), %r14d
---
> 	cmpl	(%rax), %ebx
566,568c596,598
< # %bb.5:                                #   in Loop: Header=BB10_4 Depth=2
< 	movq	%r15, %rdi
< 	movl	%ebx, %esi
---
> # %bb.5:                                #   in Loop: Header=BB10_3 Depth=2
> 	movq	-32(%rbp), %rdi
> 	movl	-12(%rbp), %esi
570,571c600,614
< 	jmp	.LBB10_6
< .LBB10_8:
---
> .LBB10_6:                               #   in Loop: Header=BB10_3 Depth=2
> 	jmp	.LBB10_7
> .LBB10_7:                               #   in Loop: Header=BB10_3 Depth=2
> 	movl	-12(%rbp), %eax
> 	addl	$1, %eax
> 	movl	%eax, -12(%rbp)
> 	jmp	.LBB10_3
> .LBB10_8:                               #   in Loop: Header=BB10_1 Depth=1
> 	jmp	.LBB10_9
> .LBB10_9:                               #   in Loop: Header=BB10_1 Depth=1
> 	movl	-16(%rbp), %eax
> 	addl	$1, %eax
> 	movl	%eax, -16(%rbp)
> 	jmp	.LBB10_1
> .LBB10_10:
574,577d616
< 	popq	%r12
< 	popq	%r13
< 	popq	%r14
< 	popq	%r15
596,597d634
< 	pushq	%r15
< 	pushq	%r14
599,603c636,642
< 	pushq	%rax
< 	.cfi_offset %rbx, -40
< 	.cfi_offset %r14, -32
< 	.cfi_offset %r15, -24
< 	movq	%rdi, %r14
---
> 	subq	$24, %rsp
> 	.cfi_offset %rbx, -24
> 	movq	%rdi, -24(%rbp)
> 	movl	$0, -12(%rbp)
> .LBB11_1:                               # =>This Inner Loop Header: Depth=1
> 	movslq	-12(%rbp), %rbx
> 	movq	-24(%rbp), %rdi
605,612c644,648
< 	testq	%rax, %rax
< 	je	.LBB11_3
< # %bb.1:                                # %.lr.ph
< 	xorl	%ebx, %ebx
< 	.p2align	4, 0x90
< .LBB11_2:                               # =>This Inner Loop Header: Depth=1
< 	movq	%r14, %rdi
< 	movq	%rbx, %rsi
---
> 	cmpq	%rax, %rbx
> 	jae	.LBB11_4
> # %bb.2:                                #   in Loop: Header=BB11_1 Depth=1
> 	movq	-24(%rbp), %rdi
> 	movslq	-12(%rbp), %rsi
615c651
< 	movl	$_ZSt4cout, %edi
---
> 	movabsq	$_ZSt4cout, %rdi
617d652
< 	movl	$.L__unnamed_3, %esi
618a654
> 	movabsq	$.L.str, %rsi
620,627c656,662
< 	addq	$1, %rbx
< 	movslq	%ebx, %r15
< 	movq	%r14, %rdi
< 	callq	_ZNKSt6vectorIiSaIiEE4sizeEv
< 	cmpq	%rax, %r15
< 	jb	.LBB11_2
< .LBB11_3:
< 	addq	$8, %rsp
---
> # %bb.3:                                #   in Loop: Header=BB11_1 Depth=1
> 	movl	-12(%rbp), %eax
> 	addl	$1, %eax
> 	movl	%eax, -12(%rbp)
> 	jmp	.LBB11_1
> .LBB11_4:
> 	addq	$24, %rsp
629,630d663
< 	popq	%r14
< 	popq	%r15
650,651c683,687
< 	movq	8(%rdi), %rax
< 	subq	(%rdi), %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rcx
> 	movq	8(%rcx), %rax
> 	movq	(%rcx), %rcx
> 	subq	%rcx, %rax
664a701
> .Lfunc_begin1:
665a703,704
> 	.cfi_personality 3, __gxx_personality_v0
> 	.cfi_lsda 3, .Lexception1
672,673d710
< 	pushq	%r15
< 	pushq	%r14
675,681c712,717
< 	subq	$648, %rsp              # imm = 0x288
< 	.cfi_offset %rbx, -40
< 	.cfi_offset %r14, -32
< 	.cfi_offset %r15, -24
< 	movq	%rsi, %r14
< 	movl	%edi, %ebx
< 	leaq	-664(%rbp), %rdi
---
> 	subq	$680, %rsp              # imm = 0x2A8
> 	.cfi_offset %rbx, -24
> 	movl	$0, -32(%rbp)
> 	movl	%edi, -28(%rbp)
> 	movq	%rsi, -104(%rbp)
> 	leaq	-688(%rbp), %rdi
683,684c719,720
< 	cmpl	$2, %ebx
< 	jl	.LBB13_2
---
> 	cmpl	$2, -28(%rbp)
> 	jl	.LBB13_29
686,688c722,725
< 	movq	8(%r14), %rsi
< 	leaq	-664(%rbp), %rbx
< 	movq	%rbx, %rdi
---
> 	movq	-104(%rbp), %rax
> 	movq	8(%rax), %rsi
> .Ltmp5:
> 	leaq	-688(%rbp), %rdi
691,693c728,731
< 	leaq	-144(%rbp), %r14
< 	movq	%r14, %rdi
< 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
---
> .Ltmp6:
> 	jmp	.LBB13_2
> .LBB13_2:
> 	leaq	-136(%rbp), %rbx
695c733,736
< 	movq	%r14, %rsi
---
> 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
> .Ltmp8:
> 	leaq	-688(%rbp), %rdi
> 	movq	%rbx, %rsi
696a738,741
> .Ltmp9:
> 	jmp	.LBB13_3
> .LBB13_3:
> .Ltmp10:
698c743
< 	movl	$.L__unnamed_4, %esi
---
> 	movl	$.L.str.1, %esi
700c745,748
< 	movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %esi
---
> .Ltmp11:
> 	jmp	.LBB13_4
> .LBB13_4:
> .Ltmp12:
701a750
> 	movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %esi
702a752,756
> .Ltmp13:
> 	jmp	.LBB13_5
> .LBB13_5:
> .Ltmp14:
> 	leaq	-136(%rbp), %rsi
704d757
< 	movq	%r14, %rsi
706c759,762
< 	movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %esi
---
> .Ltmp15:
> 	jmp	.LBB13_6
> .LBB13_6:
> .Ltmp16:
707a764
> 	movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %esi
709,710c766,769
< 	leaq	-80(%rbp), %r15
< 	movq	%r15, %rdi
---
> .Ltmp17:
> 	jmp	.LBB13_7
> .LBB13_7:
> 	leaq	-96(%rbp), %rdi
713,716c772,775
< 	movq	%rax, -56(%rbp)
< 	leaq	-112(%rbp), %rbx
< 	movq	%rbx, %rdi
< 	movq	%r14, %rsi
---
> 	movq	%rax, -72(%rbp)
> .Ltmp19:
> 	leaq	-168(%rbp), %rdi
> 	leaq	-136(%rbp), %rsi
718,719c777,782
< 	movq	%r15, %rdi
< 	movq	%rbx, %rsi
---
> .Ltmp20:
> 	jmp	.LBB13_8
> .LBB13_8:
> .Ltmp21:
> 	leaq	-96(%rbp), %rdi
> 	leaq	-168(%rbp), %rsi
721c784,787
< 	movq	%rbx, %rdi
---
> .Ltmp22:
> 	jmp	.LBB13_9
> .LBB13_9:
> 	leaq	-168(%rbp), %rdi
723c789,790
< 	movq	%r15, %rdi
---
> 	leaq	-96(%rbp), %rbx
> 	movq	%rbx, %rdi
725c792,793
< 	movq	%r15, %rdi
---
> .Ltmp24:
> 	movq	%rbx, %rdi
727a796,798
> .Ltmp25:
> 	jmp	.LBB13_10
> .LBB13_10:
729,731c800,803
< 	movq	%rax, -40(%rbp)
< 	leaq	-40(%rbp), %rdi
< 	leaq	-56(%rbp), %rsi
---
> 	movq	%rax, -56(%rbp)
> .Ltmp26:
> 	leaq	-56(%rbp), %rdi
> 	leaq	-72(%rbp), %rsi
733c805,809
< 	movq	%rax, -48(%rbp)
---
> .Ltmp27:
> 	jmp	.LBB13_11
> .LBB13_11:
> 	movq	%rax, -64(%rbp)
> .Ltmp28:
737c813,816
< 	movl	$.L__unnamed_5, %esi
---
> .Ltmp29:
> 	jmp	.LBB13_12
> .LBB13_12:
> .Ltmp30:
738a818
> 	movl	$.L.str.2, %esi
740c820,823
< 	movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %esi
---
> .Ltmp31:
> 	jmp	.LBB13_13
> .LBB13_13:
> .Ltmp32:
741a825
> 	movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %esi
743c827,831
< 	movq	%r15, %rdi
---
> .Ltmp33:
> 	jmp	.LBB13_14
> .LBB13_14:
> .Ltmp34:
> 	leaq	-96(%rbp), %rdi
745c833,837
< 	leaq	-48(%rbp), %rdi
---
> .Ltmp35:
> 	jmp	.LBB13_15
> .LBB13_15:
> .Ltmp36:
> 	leaq	-64(%rbp), %rdi
747,748c839,844
< 	movq	%rax, -32(%rbp)
< 	leaq	-32(%rbp), %rdi
---
> .Ltmp37:
> 	jmp	.LBB13_16
> .LBB13_16:
> 	movq	%rax, -40(%rbp)
> .Ltmp38:
> 	leaq	-40(%rbp), %rdi
750c846,850
< 	movq	%rax, %rbx
---
> .Ltmp39:
> 	jmp	.LBB13_17
> .LBB13_17:
> 	movq	%rax, -48(%rbp)
> .Ltmp40:
754c854,857
< 	movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %esi
---
> .Ltmp41:
> 	jmp	.LBB13_18
> .LBB13_18:
> .Ltmp42:
755a859
> 	movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %esi
757c861,864
< 	movl	$.L__unnamed_6, %esi
---
> .Ltmp43:
> 	jmp	.LBB13_19
> .LBB13_19:
> .Ltmp44:
758a866
> 	movl	$.L.str.3, %esi
759a868,872
> .Ltmp45:
> 	jmp	.LBB13_20
> .LBB13_20:
> 	movq	-48(%rbp), %rsi
> .Ltmp46:
761d873
< 	movq	%rbx, %rsi
763c875,878
< 	movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %esi
---
> .Ltmp47:
> 	jmp	.LBB13_21
> .LBB13_21:
> .Ltmp48:
764a880
> 	movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %esi
766c882,885
< 	movq	%r15, %rdi
---
> .Ltmp49:
> 	jmp	.LBB13_22
> .LBB13_22:
> 	leaq	-96(%rbp), %rdi
768c887
< 	movq	%r14, %rdi
---
> 	leaq	-136(%rbp), %rdi
770,771c889,919
< .LBB13_2:
< 	leaq	-664(%rbp), %rdi
---
> 	jmp	.LBB13_29
> .LBB13_23:
> .Ltmp7:
> 	movq	%rax, -24(%rbp)
> 	movl	%edx, -12(%rbp)
> 	jmp	.LBB13_30
> .LBB13_24:
> .Ltmp18:
> 	movq	%rax, -24(%rbp)
> 	movl	%edx, -12(%rbp)
> 	jmp	.LBB13_28
> .LBB13_25:
> .Ltmp50:
> 	movq	%rax, -24(%rbp)
> 	movl	%edx, -12(%rbp)
> 	jmp	.LBB13_27
> .LBB13_26:
> .Ltmp23:
> 	movq	%rax, -24(%rbp)
> 	movl	%edx, -12(%rbp)
> 	leaq	-168(%rbp), %rdi
> 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
> .LBB13_27:
> 	leaq	-96(%rbp), %rdi
> 	callq	_ZNSt6vectorIiSaIiEED2Ev
> .LBB13_28:
> 	leaq	-136(%rbp), %rdi
> 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
> 	jmp	.LBB13_30
> .LBB13_29:
> 	leaq	-688(%rbp), %rdi
773,774c921,922
< 	xorl	%eax, %eax
< 	addq	$648, %rsp              # imm = 0x288
---
> 	movl	-32(%rbp), %eax
> 	addq	$680, %rsp              # imm = 0x2A8
776,777d923
< 	popq	%r14
< 	popq	%r15
780a927,933
> .LBB13_30:
> 	.cfi_def_cfa %rbp, 16
> 	leaq	-688(%rbp), %rdi
> 	callq	_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev
> # %bb.31:
> 	movq	-24(%rbp), %rdi
> 	callq	_Unwind_Resume
783a937,975
> 	.section	.gcc_except_table,"a",@progbits
> 	.p2align	2
> GCC_except_table13:
> .Lexception1:
> 	.byte	255                     # @LPStart Encoding = omit
> 	.byte	255                     # @TType Encoding = omit
> 	.byte	1                       # Call site Encoding = uleb128
> 	.uleb128 .Lcst_end1-.Lcst_begin1
> .Lcst_begin1:
> 	.uleb128 .Lfunc_begin1-.Lfunc_begin1 # >> Call Site 1 <<
> 	.uleb128 .Ltmp5-.Lfunc_begin1   #   Call between .Lfunc_begin1 and .Ltmp5
> 	.byte	0                       #     has no landing pad
> 	.byte	0                       #   On action: cleanup
> 	.uleb128 .Ltmp5-.Lfunc_begin1   # >> Call Site 2 <<
> 	.uleb128 .Ltmp6-.Ltmp5          #   Call between .Ltmp5 and .Ltmp6
> 	.uleb128 .Ltmp7-.Lfunc_begin1   #     jumps to .Ltmp7
> 	.byte	0                       #   On action: cleanup
> 	.uleb128 .Ltmp8-.Lfunc_begin1   # >> Call Site 3 <<
> 	.uleb128 .Ltmp17-.Ltmp8         #   Call between .Ltmp8 and .Ltmp17
> 	.uleb128 .Ltmp18-.Lfunc_begin1  #     jumps to .Ltmp18
> 	.byte	0                       #   On action: cleanup
> 	.uleb128 .Ltmp19-.Lfunc_begin1  # >> Call Site 4 <<
> 	.uleb128 .Ltmp20-.Ltmp19        #   Call between .Ltmp19 and .Ltmp20
> 	.uleb128 .Ltmp50-.Lfunc_begin1  #     jumps to .Ltmp50
> 	.byte	0                       #   On action: cleanup
> 	.uleb128 .Ltmp21-.Lfunc_begin1  # >> Call Site 5 <<
> 	.uleb128 .Ltmp22-.Ltmp21        #   Call between .Ltmp21 and .Ltmp22
> 	.uleb128 .Ltmp23-.Lfunc_begin1  #     jumps to .Ltmp23
> 	.byte	0                       #   On action: cleanup
> 	.uleb128 .Ltmp24-.Lfunc_begin1  # >> Call Site 6 <<
> 	.uleb128 .Ltmp49-.Ltmp24        #   Call between .Ltmp24 and .Ltmp49
> 	.uleb128 .Ltmp50-.Lfunc_begin1  #     jumps to .Ltmp50
> 	.byte	0                       #   On action: cleanup
> 	.uleb128 .Ltmp49-.Lfunc_begin1  # >> Call Site 7 <<
> 	.uleb128 .Lfunc_end13-.Ltmp49   #   Call between .Ltmp49 and .Lfunc_end13
> 	.byte	0                       #     has no landing pad
> 	.byte	0                       #   On action: cleanup
> .Lcst_end1:
> 	.p2align	2
796a989,993
> 	subq	$16, %rsp
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rdi
> 	callq	_ZNSt12_Vector_baseIiSaIiEEC2Ev
> 	addq	$16, %rsp
799c996
< 	jmp	_ZNSt12_Vector_baseIiSaIiEEC2Ev # TAILCALL
---
> 	retq
816,822c1013,1016
< 	pushq	%rbx
< 	subq	$24, %rsp
< 	.cfi_offset %rbx, -24
< 	movq	%rsi, %rbx
< 	callq	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv
< 	movq	%rax, -24(%rbp)
< 	movq	%rbx, %rdi
---
> 	subq	$48, %rsp
> 	movq	%rdi, -32(%rbp)
> 	movq	%rsi, -24(%rbp)
> 	movq	-32(%rbp), %rdi
825,826c1019,1023
< 	leaq	-24(%rbp), %rdi
< 	leaq	-16(%rbp), %rsi
---
> 	movq	-24(%rbp), %rdi
> 	callq	_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv
> 	movq	%rax, -8(%rbp)
> 	leaq	-16(%rbp), %rdi
> 	leaq	-8(%rbp), %rsi
828,829c1025,1027
< 	addq	$24, %rsp
< 	popq	%rbx
---
> 	movq	%rax, -40(%rbp)
> 	movq	-40(%rbp), %rax
> 	addq	$48, %rsp
848a1047,1053
> 	subq	$16, %rsp
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rdi
> 	callq	_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE
> 	movq	%rax, -16(%rbp)
> 	movq	-16(%rbp), %rax
> 	addq	$16, %rsp
851c1056
< 	jmp	_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE # TAILCALL
---
> 	retq
868c1073,1075
< 	movq	(%rdi), %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
> 	movq	(%rax), %rax
880a1088
> .Lfunc_begin2:
881a1090,1091
> 	.cfi_personality 3, __gxx_personality_v0
> 	.cfi_lsda 3, .Lexception2
891c1101
< 	pushq	%rax
---
> 	subq	$24, %rsp
895,897c1105,1109
< 	movq	%rdi, %rbx
< 	movq	(%rdi), %r14
< 	movq	8(%rdi), %r15
---
> 	movq	%rdi, -40(%rbp)
> 	movq	-40(%rbp), %rbx
> 	movq	(%rbx), %r14
> 	movq	8(%rbx), %r15
> 	movq	%rbx, %rdi
898a1111
> .Ltmp51:
902a1116,1118
> .Ltmp52:
> 	jmp	.LBB18_1
> .LBB18_1:
904c1120,1121
< 	addq	$8, %rsp
---
> 	callq	_ZNSt12_Vector_baseIiSaIiEED2Ev
> 	addq	$24, %rsp
910c1127,1137
< 	jmp	_ZNSt12_Vector_baseIiSaIiEED2Ev # TAILCALL
---
> 	retq
> .LBB18_2:
> 	.cfi_def_cfa %rbp, 16
> .Ltmp53:
> 	movq	%rax, -32(%rbp)
> 	movl	%edx, -44(%rbp)
> 	movq	%rbx, %rdi
> 	callq	_ZNSt12_Vector_baseIiSaIiEED2Ev
> # %bb.3:
> 	movq	-32(%rbp), %rdi
> 	callq	__clang_call_terminate
913a1141,1164
> 	.section	.gcc_except_table,"a",@progbits
> 	.p2align	2
> GCC_except_table18:
> .Lexception2:
> 	.byte	255                     # @LPStart Encoding = omit
> 	.byte	3                       # @TType Encoding = udata4
> 	.uleb128 .Lttbase0-.Lttbaseref0
> .Lttbaseref0:
> 	.byte	1                       # Call site Encoding = uleb128
> 	.uleb128 .Lcst_end2-.Lcst_begin2
> .Lcst_begin2:
> 	.uleb128 .Ltmp51-.Lfunc_begin2  # >> Call Site 1 <<
> 	.uleb128 .Ltmp52-.Ltmp51        #   Call between .Ltmp51 and .Ltmp52
> 	.uleb128 .Ltmp53-.Lfunc_begin2  #     jumps to .Ltmp53
> 	.byte	1                       #   On action: 1
> .Lcst_end2:
> 	.byte	1                       # >> Action Record 1 <<
>                                         #   Catch TypeInfo 1
> 	.byte	0                       #   No further actions
> 	.p2align	2
>                                         # >> Catch TypeInfos <<
> 	.long	0                       # TypeInfo 1
> .Lttbase0:
> 	.p2align	2
926a1178,1182
> 	subq	$16, %rsp
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rdi
> 	callq	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev
> 	addq	$16, %rsp
929c1185
< 	jmp	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev # TAILCALL
---
> 	retq
949c1205,1207
< 	movq	%rdi, %rbx
---
> 	movq	%rdi, -16(%rbp)
> 	movq	-16(%rbp), %rbx
> 	movq	%rbx, %rdi
951a1210
> 	callq	_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev
956c1215
< 	jmp	_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev # TAILCALL
---
> 	retq
972a1232,1236
> 	subq	$16, %rsp
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rdi
> 	callq	_ZN9__gnu_cxx13new_allocatorIiEC2Ev
> 	addq	$16, %rsp
975c1239
< 	jmp	_ZN9__gnu_cxx13new_allocatorIiEC2Ev # TAILCALL
---
> 	retq
992,994c1256,1260
< 	xorps	%xmm0, %xmm0
< 	movups	%xmm0, (%rdi)
< 	movq	$0, 16(%rdi)
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
> 	movq	$0, (%rax)
> 	movq	$0, 8(%rax)
> 	movq	$0, 16(%rax)
1013a1280
> 	movq	%rdi, -8(%rbp)
1033d1299
< 	pushq	%r14
1035,1044c1301,1306
< 	subq	$32, %rsp
< 	.cfi_offset %rbx, -32
< 	.cfi_offset %r14, -24
< 	movq	%rsi, %r14
< 	movq	(%rdi), %rax
< 	movq	%rax, -32(%rbp)
< 	leaq	-32(%rbp), %rdi
< 	callq	_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv
< 	movq	%rax, %rbx
< 	movq	(%r14), %rax
---
> 	subq	$56, %rsp
> 	.cfi_offset %rbx, -24
> 	movq	%rdi, -48(%rbp)
> 	movq	%rsi, -40(%rbp)
> 	movq	-48(%rbp), %rax
> 	movq	(%rax), %rax
1047a1310,1315
> 	movq	%rax, %rbx
> 	movq	-40(%rbp), %rax
> 	movq	(%rax), %rax
> 	movq	%rax, -16(%rbp)
> 	leaq	-16(%rbp), %rdi
> 	callq	_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv
1049,1051c1317,1319
< 	movq	%rbx, -40(%rbp)
< 	leaq	-48(%rbp), %rdi
< 	leaq	-40(%rbp), %rsi
---
> 	movq	%rbx, -32(%rbp)
> 	leaq	-56(%rbp), %rdi
> 	leaq	-32(%rbp), %rsi
1053,1054c1321,1322
< 	movq	-48(%rbp), %rax
< 	addq	$32, %rsp
---
> 	movq	-56(%rbp), %rax
> 	addq	$56, %rsp
1056d1323
< 	popq	%r14
1076c1343,1347
< 	movq	(%rdi), %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
> 	movq	(%rax), %rax
> 	movq	%rax, -16(%rbp)
> 	movq	-16(%rbp), %rax
1096c1367,1369
< 	movq	(%rdi), %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
> 	movq	(%rax), %rax
1116,1117c1389,1394
< 	movq	(%rsi), %rax
< 	movq	%rax, (%rdi)
---
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	-16(%rbp), %rax
> 	movq	-8(%rbp), %rcx
> 	movq	(%rcx), %rcx
> 	movq	%rcx, (%rax)
1137c1414,1416
< 	subq	$16, %rsp
---
> 	subq	$32, %rsp
> 	movq	%rdi, -16(%rbp)
> 	movq	-16(%rbp), %rdi
1139,1146c1418,1422
< 	movabsq	$2361183241434822607, %rcx # imm = 0x20C49BA5E353F7CF
< 	imulq	%rcx
< 	movq	%rdx, %rax
< 	shrq	$63, %rax
< 	sarq	$7, %rdx
< 	addq	%rax, %rdx
< 	movq	%rdx, -8(%rbp)
< 	leaq	-16(%rbp), %rdi
---
> 	cqto
> 	movl	$1000, %ecx             # imm = 0x3E8
> 	idivq	%rcx
> 	movq	%rax, -8(%rbp)
> 	leaq	-24(%rbp), %rdi
1149,1150c1425,1426
< 	movq	-16(%rbp), %rax
< 	addq	$16, %rsp
---
> 	movq	-24(%rbp), %rax
> 	addq	$32, %rsp
1170,1171c1446,1451
< 	movq	(%rsi), %rax
< 	movq	%rax, (%rdi)
---
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	-16(%rbp), %rax
> 	movq	-8(%rbp), %rcx
> 	movq	(%rcx), %rcx
> 	movq	%rcx, (%rax)
1192a1473
> 	subq	$32, %rsp
1195,1197c1476,1481
< 	movq	%rsi, %r14
< 	movq	%rdi, %rbx
< 	movq	%rdx, %rdi
---
> 	movq	%rdi, -40(%rbp)
> 	movq	%rsi, -32(%rbp)
> 	movq	%rdx, -24(%rbp)
> 	movq	-40(%rbp), %r14
> 	movq	-32(%rbp), %rbx
> 	movq	-24(%rbp), %rdi
1199,1200c1483,1484
< 	movq	%rbx, %rdi
< 	movq	%r14, %rsi
---
> 	movq	%r14, %rdi
> 	movq	%rbx, %rsi
1201a1486,1487
> 	callq	_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_
> 	addq	$32, %rsp
1206c1492
< 	jmp	_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ # TAILCALL
---
> 	retq
1225d1510
< 	pushq	%r13
1228,1231c1513,1515
< 	subq	$40, %rsp
< 	.cfi_offset %rbx, -56
< 	.cfi_offset %r12, -48
< 	.cfi_offset %r13, -40
---
> 	subq	$80, %rsp
> 	.cfi_offset %rbx, -48
> 	.cfi_offset %r12, -40
1234,1236c1518,1522
< 	movq	%rdx, %r14
< 	movq	%rdi, %rbx
< 	movq	%rsi, -48(%rbp)
---
> 	movq	%rsi, -64(%rbp)
> 	movq	%rdi, -112(%rbp)
> 	movq	%rdx, -104(%rbp)
> 	movq	-112(%rbp), %r14
> 	movq	%r14, %rdi
1238c1524
< 	movl	$.L__unnamed_7, %edx
---
> 	movabsq	$.L.str.4, %rdx
1240,1246d1525
< 	movq	%rax, %r13
< 	movq	%rax, -64(%rbp)         # 8-byte Spill
< 	movq	(%rbx), %r15
< 	movq	8(%rbx), %rax
< 	movq	%rax, -56(%rbp)         # 8-byte Spill
< 	movq	%rbx, %rdi
< 	callq	_ZNSt6vectorIiSaIiEE5beginEv
1248,1249c1527,1535
< 	leaq	-48(%rbp), %rdi
< 	leaq	-72(%rbp), %rsi
---
> 	movq	(%r14), %rax
> 	movq	%rax, -56(%rbp)
> 	movq	8(%r14), %rax
> 	movq	%rax, -96(%rbp)
> 	movq	%r14, %rdi
> 	callq	_ZNSt6vectorIiSaIiEE5beginEv
> 	movq	%rax, -80(%rbp)
> 	leaq	-64(%rbp), %rdi
> 	leaq	-80(%rbp), %rsi
1251,1256c1537,1538
< 	movq	%rax, %r12
< 	movq	%rbx, %rdi
< 	movq	%r13, %rsi
< 	callq	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm
< 	movq	%rax, %r13
< 	leaq	(%rax,%r12,4), %r12
---
> 	movq	%rax, -88(%rbp)
> 	movq	-72(%rbp), %rsi
1257a1540,1548
> 	callq	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm
> 	movq	%rax, -48(%rbp)
> 	movq	-48(%rbp), %rax
> 	movq	%rax, -40(%rbp)
> 	movq	-48(%rbp), %rbx
> 	movq	-88(%rbp), %rax
> 	shlq	$2, %rax
> 	addq	%rax, %rbx
> 	movq	-104(%rbp), %rdi
1259,1260c1550,1551
< 	movq	%rbx, %rdi
< 	movq	%r12, %rsi
---
> 	movq	%r14, %rdi
> 	movq	%rbx, %rsi
1263,1264c1554,1556
< 	leaq	-48(%rbp), %r12
< 	movq	%r12, %rdi
---
> 	movq	$0, -40(%rbp)
> 	movq	-56(%rbp), %r15
> 	leaq	-64(%rbp), %rdi
1266,1267c1558,1560
< 	movq	(%rax), %r14
< 	movq	%rbx, %rdi
---
> 	movq	(%rax), %rbx
> 	movq	-48(%rbp), %r12
> 	movq	%r14, %rdi
1270,1271c1563,1564
< 	movq	%r14, %rsi
< 	movq	%r13, %rdx
---
> 	movq	%rbx, %rsi
> 	movq	%r12, %rdx
1274,1275c1567,1571
< 	leaq	4(%rax), %r14
< 	movq	%r12, %rdi
---
> 	movq	%rax, -40(%rbp)
> 	movq	-40(%rbp), %rax
> 	addq	$4, %rax
> 	movq	%rax, -40(%rbp)
> 	leaq	-64(%rbp), %rdi
1277,1278c1573,1576
< 	movq	(%rax), %r12
< 	movq	%rbx, %rdi
---
> 	movq	(%rax), %rbx
> 	movq	-96(%rbp), %r15
> 	movq	-40(%rbp), %r12
> 	movq	%r14, %rdi
1280,1282c1578,1580
< 	movq	%r12, %rdi
< 	movq	-56(%rbp), %rsi         # 8-byte Reload
< 	movq	%r14, %rdx
---
> 	movq	%rbx, %rdi
> 	movq	%r15, %rsi
> 	movq	%r12, %rdx
1285,1287c1583,1587
< 	movq	%rax, %r14
< 	movq	16(%rbx), %rdx
< 	subq	%r15, %rdx
---
> 	movq	%rax, -40(%rbp)
> 	movq	-56(%rbp), %rsi
> 	movq	16(%r14), %rdx
> 	movq	-56(%rbp), %rax
> 	subq	%rax, %rdx
1289,1290c1589
< 	movq	%rbx, %rdi
< 	movq	%r15, %rsi
---
> 	movq	%r14, %rdi
1292,1298c1591,1600
< 	movq	%r13, (%rbx)
< 	movq	%r14, 8(%rbx)
< 	movq	-64(%rbp), %rax         # 8-byte Reload
< 	leaq	(,%rax,4), %rax
< 	addq	%r13, %rax
< 	movq	%rax, 16(%rbx)
< 	addq	$40, %rsp
---
> 	movq	-48(%rbp), %rax
> 	movq	%rax, (%r14)
> 	movq	-40(%rbp), %rax
> 	movq	%rax, 8(%r14)
> 	movq	-48(%rbp), %rax
> 	movq	-72(%rbp), %rcx
> 	shlq	$2, %rcx
> 	addq	%rcx, %rax
> 	movq	%rax, 16(%r14)
> 	addq	$80, %rsp
1301d1602
< 	popq	%r13
1324,1325c1625,1628
< 	leaq	8(%rdi), %rsi
< 	leaq	-8(%rbp), %rdi
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rsi
> 	addq	$8, %rsi
> 	leaq	-16(%rbp), %rdi
1327c1630
< 	movq	-8(%rbp), %rax
---
> 	movq	-16(%rbp), %rax
1349c1652
< 	pushq	%rax
---
> 	subq	$24, %rsp
1351,1352c1654,1658
< 	movq	%rdx, %rdi
< 	movq	%rsi, %rbx
---
> 	movq	%rdi, -32(%rbp)
> 	movq	%rsi, -24(%rbp)
> 	movq	%rdx, -16(%rbp)
> 	movq	-24(%rbp), %rbx
> 	movq	-16(%rbp), %rdi
1356c1662
< 	addq	$8, %rsp
---
> 	addq	$24, %rsp
1377c1683,1684
< 	movq	%rdi, %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
1397d1703
< 	pushq	%r15
1400,1405c1706,1709
< 	subq	$24, %rsp
< 	.cfi_offset %rbx, -40
< 	.cfi_offset %r14, -32
< 	.cfi_offset %r15, -24
< 	movq	%rdx, %r15
< 	movq	%rdi, %r14
---
> 	subq	$48, %rsp
> 	.cfi_offset %rbx, -32
> 	.cfi_offset %r14, -24
> 	movq	%rdi, -56(%rbp)
1406a1711,1713
> 	movq	%rdx, -48(%rbp)
> 	movq	-56(%rbp), %r14
> 	movq	%r14, %rdi
1413c1720
< 	jb	.LBB35_5
---
> 	jae	.LBB35_2
1414a1722,1724
> 	movq	-48(%rbp), %rdi
> 	callq	_ZSt20__throw_length_errorPKc
> .LBB35_2:
1424a1735,1736
> 	movq	%rbx, -24(%rbp)
> 	movq	-24(%rbp), %rbx
1428,1429c1740,1742
< 	jb	.LBB35_3
< # %bb.2:
---
> 	jb	.LBB35_4
> # %bb.3:
> 	movq	-24(%rbp), %rbx
1433,1434c1746,1747
< 	jbe	.LBB35_4
< .LBB35_3:
---
> 	jbe	.LBB35_5
> .LBB35_4:
1437,1440c1750,1754
< 	movq	%rax, %rbx
< .LBB35_4:
< 	movq	%rbx, %rax
< 	addq	$24, %rsp
---
> 	jmp	.LBB35_6
> .LBB35_5:
> 	movq	-24(%rbp), %rax
> .LBB35_6:
> 	addq	$48, %rsp
1443d1756
< 	popq	%r15
1447,1450d1759
< .LBB35_5:
< 	.cfi_def_cfa %rbp, 16
< 	movq	%r15, %rdi
< 	callq	_ZSt20__throw_length_errorPKc
1467d1775
< 	pushq	%r14
1469,1471c1777,1781
< 	.cfi_offset %rbx, -32
< 	.cfi_offset %r14, -24
< 	movq	%rsi, %r14
---
> 	subq	$24, %rsp
> 	.cfi_offset %rbx, -24
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -16(%rbp)
> 	movq	-24(%rbp), %rdi
1474c1784
< 	movq	%r14, %rdi
---
> 	movq	-16(%rbp), %rdi
1476c1786,1787
< 	subq	(%rax), %rbx
---
> 	movq	(%rax), %rax
> 	subq	%rax, %rbx
1478a1790
> 	addq	$24, %rsp
1480d1791
< 	popq	%r14
1500,1507c1811,1821
< 	testq	%rsi, %rsi
< 	je	.LBB37_1
< # %bb.2:
< 	popq	%rbp
< 	.cfi_def_cfa %rsp, 8
< 	jmp	_ZNSt16allocator_traitsISaIiEE8allocateERS0_m # TAILCALL
< .LBB37_1:
< 	.cfi_def_cfa %rbp, 16
---
> 	subq	$16, %rsp
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	-16(%rbp), %rdi
> 	cmpq	$0, -8(%rbp)
> 	je	.LBB37_2
> # %bb.1:
> 	movq	-8(%rbp), %rsi
> 	callq	_ZNSt16allocator_traitsISaIiEE8allocateERS0_m
> 	jmp	.LBB37_3
> .LBB37_2:
1508a1823,1825
> 	jmp	.LBB37_3
> .LBB37_3:
> 	addq	$16, %rsp
1527a1845,1855
> 	subq	$48, %rsp
> 	movq	%rdi, -32(%rbp)
> 	movq	%rsi, -24(%rbp)
> 	movq	%rdx, -16(%rbp)
> 	movq	%rcx, -8(%rbp)
> 	movq	-32(%rbp), %rdi
> 	movq	-24(%rbp), %rsi
> 	movq	-16(%rbp), %rdx
> 	movq	-8(%rbp), %rcx
> 	callq	_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE
> 	addq	$48, %rsp
1530c1858
< 	jmp	_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE # TAILCALL
---
> 	retq
1547c1875,1876
< 	movq	%rdi, %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
1567c1896,1897
< 	movq	%rdi, %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
1587,1594c1917,1929
< 	testq	%rsi, %rsi
< 	je	.LBB41_1
< # %bb.2:
< 	popq	%rbp
< 	.cfi_def_cfa %rsp, 8
< 	jmp	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim # TAILCALL
< .LBB41_1:
< 	.cfi_def_cfa %rbp, 16
---
> 	subq	$32, %rsp
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	%rdx, -16(%rbp)
> 	movq	-24(%rbp), %rdi
> 	cmpq	$0, -8(%rbp)
> 	je	.LBB41_2
> # %bb.1:
> 	movq	-8(%rbp), %rsi
> 	movq	-16(%rbp), %rdx
> 	callq	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim
> .LBB41_2:
> 	addq	$32, %rsp
1613a1949,1951
> 	subq	$16, %rsp
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rdi
1615a1954,1955
> 	callq	_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_
> 	addq	$16, %rsp
1618c1958
< 	jmp	_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_ # TAILCALL
---
> 	retq
1635,1638c1975,1981
< 	movq	%rsi, %rax
< 	movq	(%rdi), %rcx
< 	cmpq	(%rsi), %rcx
< 	jb	.LBB43_2
---
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	-16(%rbp), %rax
> 	movq	(%rax), %rax
> 	movq	-8(%rbp), %rcx
> 	cmpq	(%rcx), %rax
> 	jae	.LBB43_2
1640c1983,1985
< 	movq	%rdi, %rax
---
> 	movq	-8(%rbp), %rax
> 	movq	%rax, -24(%rbp)
> 	jmp	.LBB43_3
1641a1987,1990
> 	movq	-16(%rbp), %rax
> 	movq	%rax, -24(%rbp)
> .LBB43_3:
> 	movq	-24(%rbp), %rax
1653a2003
> .Lfunc_begin3:
1654a2005,2006
> 	.cfi_personality 3, __gxx_personality_v0
> 	.cfi_lsda 3, .Lexception3
1661c2013,2014
< 	subq	$16, %rsp
---
> 	subq	$32, %rsp
> 	movq	%rdi, -24(%rbp)
1663a2017
> 	movq	-24(%rbp), %rdi
1665a2020
> .Ltmp54:
1668a2024,2026
> .Ltmp55:
> 	jmp	.LBB44_1
> .LBB44_1:
1670c2028
< 	addq	$16, %rsp
---
> 	addq	$32, %rsp
1673a2032,2037
> .LBB44_2:
> 	.cfi_def_cfa %rbp, 16
> .Ltmp56:
>                                         # kill: killed $rdx
> 	movq	%rax, %rdi
> 	callq	__clang_call_terminate
1676a2041,2064
> 	.section	.gcc_except_table,"a",@progbits
> 	.p2align	2
> GCC_except_table44:
> .Lexception3:
> 	.byte	255                     # @LPStart Encoding = omit
> 	.byte	3                       # @TType Encoding = udata4
> 	.uleb128 .Lttbase1-.Lttbaseref1
> .Lttbaseref1:
> 	.byte	1                       # Call site Encoding = uleb128
> 	.uleb128 .Lcst_end3-.Lcst_begin3
> .Lcst_begin3:
> 	.uleb128 .Ltmp54-.Lfunc_begin3  # >> Call Site 1 <<
> 	.uleb128 .Ltmp55-.Ltmp54        #   Call between .Ltmp54 and .Ltmp55
> 	.uleb128 .Ltmp56-.Lfunc_begin3  #     jumps to .Ltmp56
> 	.byte	1                       #   On action: 1
> .Lcst_end3:
> 	.byte	1                       # >> Action Record 1 <<
>                                         #   Catch TypeInfo 1
> 	.byte	0                       #   No further actions
> 	.p2align	2
>                                         # >> Catch TypeInfos <<
> 	.long	0                       # TypeInfo 1
> .Lttbase1:
> 	.p2align	2
1690c2078,2079
< 	movq	%rdi, %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
1709a2099,2103
> 	subq	$16, %rsp
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rdi
> 	callq	_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv
> 	addq	$16, %rsp
1712c2106
< 	jmp	_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv # TAILCALL
---
> 	retq
1729,1732c2123,2129
< 	movq	%rsi, %rax
< 	movq	(%rsi), %rcx
< 	cmpq	(%rdi), %rcx
< 	jb	.LBB47_2
---
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	-8(%rbp), %rax
> 	movq	(%rax), %rax
> 	movq	-16(%rbp), %rcx
> 	cmpq	(%rcx), %rax
> 	jae	.LBB47_2
1734c2131,2133
< 	movq	%rdi, %rax
---
> 	movq	-8(%rbp), %rax
> 	movq	%rax, -24(%rbp)
> 	jmp	.LBB47_3
1735a2135,2138
> 	movq	-16(%rbp), %rax
> 	movq	%rax, -24(%rbp)
> .LBB47_3:
> 	movq	-24(%rbp), %rax
1767a2171
> 	movq	%rdi, -8(%rbp)
1787a2192,2196
> 	subq	$16, %rsp
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	-16(%rbp), %rdi
> 	movq	-8(%rbp), %rsi
1788a2198,2199
> 	callq	_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv
> 	addq	$16, %rsp
1791c2202
< 	jmp	_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv # TAILCALL
---
> 	retq
1809c2220
< 	pushq	%rax
---
> 	subq	$24, %rsp
1811c2222,2226
< 	movq	%rsi, %rbx
---
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -16(%rbp)
> 	movq	%rdx, -32(%rbp)
> 	movq	-24(%rbp), %rdi
> 	movq	-16(%rbp), %rbx
1814,1818c2229,2236
< 	ja	.LBB51_1
< # %bb.2:
< 	shlq	$2, %rbx
< 	movq	%rbx, %rdi
< 	addq	$8, %rsp
---
> 	jbe	.LBB51_2
> # %bb.1:
> 	callq	_ZSt17__throw_bad_allocv
> .LBB51_2:
> 	movq	-16(%rbp), %rdi
> 	shlq	$2, %rdi
> 	callq	_Znwm
> 	addq	$24, %rsp
1822,1825c2240
< 	jmp	_Znwm                   # TAILCALL
< .LBB51_1:
< 	.cfi_def_cfa %rbp, 16
< 	callq	_ZSt17__throw_bad_allocv
---
> 	retq
1841a2257,2267
> 	subq	$48, %rsp
> 	movq	%rdi, -32(%rbp)
> 	movq	%rsi, -24(%rbp)
> 	movq	%rdx, -16(%rbp)
> 	movq	%rcx, -8(%rbp)
> 	movq	-32(%rbp), %rdi
> 	movq	-24(%rbp), %rsi
> 	movq	-16(%rbp), %rdx
> 	movq	-8(%rbp), %rcx
> 	callq	_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_
> 	addq	$48, %rsp
1844c2270
< 	jmp	_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_ # TAILCALL
---
> 	retq
1861d2286
< 	pushq	%r15
1863d2287
< 	pushq	%r12
1865,1871c2289,2296
< 	.cfi_offset %rbx, -48
< 	.cfi_offset %r12, -40
< 	.cfi_offset %r14, -32
< 	.cfi_offset %r15, -24
< 	movq	%rcx, %r14
< 	movq	%rdx, %r15
< 	movq	%rsi, %rbx
---
> 	subq	$32, %rsp
> 	.cfi_offset %rbx, -32
> 	.cfi_offset %r14, -24
> 	movq	%rdi, -48(%rbp)
> 	movq	%rsi, -40(%rbp)
> 	movq	%rdx, -32(%rbp)
> 	movq	%rcx, -24(%rbp)
> 	movq	-48(%rbp), %rdi
1873,1874c2298,2299
< 	movq	%rax, %r12
< 	movq	%rbx, %rdi
---
> 	movq	%rax, %r14
> 	movq	-40(%rbp), %rdi
1877c2302
< 	movq	%r15, %rdi
---
> 	movq	-32(%rbp), %rdi
1879c2304,2305
< 	movq	%r12, %rdi
---
> 	movq	-24(%rbp), %rcx
> 	movq	%r14, %rdi
1882c2308,2309
< 	movq	%r14, %rcx
---
> 	callq	_ZSt14__relocate_a_1IiiENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E
> 	addq	$32, %rsp
1884d2310
< 	popq	%r12
1886d2311
< 	popq	%r15
1889c2314
< 	jmp	_ZSt14__relocate_a_1IiiENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E # TAILCALL
---
> 	retq
1906,1914c2331,2341
< 	pushq	%r14
< 	pushq	%rbx
< 	.cfi_offset %rbx, -32
< 	.cfi_offset %r14, -24
< 	movq	%rdx, %r14
< 	movq	%rsi, %rbx
< 	subq	%rdi, %rbx
< 	sarq	$2, %rbx
< 	testq	%rbx, %rbx
---
> 	subq	$48, %rsp
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -32(%rbp)
> 	movq	%rdx, -16(%rbp)
> 	movq	%rcx, -40(%rbp)
> 	movq	-32(%rbp), %rax
> 	movq	-24(%rbp), %rcx
> 	subq	%rcx, %rax
> 	sarq	$2, %rax
> 	movq	%rax, -8(%rbp)
> 	cmpq	$0, -8(%rbp)
1917,1919c2344,2347
< 	movq	%rdi, %rsi
< 	leaq	(,%rbx,4), %rdx
< 	movq	%r14, %rdi
---
> 	movq	-16(%rbp), %rdi
> 	movq	-24(%rbp), %rsi
> 	movq	-8(%rbp), %rdx
> 	shlq	$2, %rdx
1922,1924c2350,2354
< 	leaq	(%r14,%rbx,4), %rax
< 	popq	%rbx
< 	popq	%r14
---
> 	movq	-16(%rbp), %rax
> 	movq	-8(%rbp), %rcx
> 	shlq	$2, %rcx
> 	addq	%rcx, %rax
> 	addq	$48, %rsp
1944c2374,2375
< 	movq	%rdi, %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
1963a2395,2403
> 	subq	$32, %rsp
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -16(%rbp)
> 	movq	%rdx, -8(%rbp)
> 	movq	-24(%rbp), %rdi
> 	movq	-16(%rbp), %rsi
> 	movq	-8(%rbp), %rdx
> 	callq	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim
> 	addq	$32, %rsp
1966c2406
< 	jmp	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim # TAILCALL
---
> 	retq
1983c2423,2429
< 	movq	%rsi, %rdi
---
> 	subq	$32, %rsp
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	%rdx, -16(%rbp)
> 	movq	-8(%rbp), %rdi
> 	callq	_ZdlPv
> 	addq	$32, %rsp
1986c2432
< 	jmp	_ZdlPv                  # TAILCALL
---
> 	retq
2003,2004c2449,2454
< 	movq	(%rsi), %rax
< 	movq	%rax, (%rdi)
---
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	-16(%rbp), %rax
> 	movq	-8(%rbp), %rcx
> 	movq	(%rcx), %rcx
> 	movq	%rcx, (%rax)
2025a2476
> 	subq	$16, %rsp
2028,2029c2479,2483
< 	movq	%rsi, %r14
< 	movq	%rdi, %rbx
---
> 	movq	%rdi, -32(%rbp)
> 	movq	%rsi, -24(%rbp)
> 	movq	-32(%rbp), %rbx
> 	movq	-24(%rbp), %r14
> 	movq	%rbx, %rdi
2032c2486
< 	jae	.LBB59_2
---
> 	jb	.LBB59_2
2034,2040c2488
< 	popq	%rbx
< 	popq	%r14
< 	popq	%rbp
< 	.cfi_def_cfa %rsp, 8
< 	retq
< .LBB59_2:
< 	.cfi_def_cfa %rbp, 16
---
> 	movq	-24(%rbp), %r14
2043c2491
< 	movl	$.L__unnamed_8, %edi
---
> 	movabsq	$.L.str.5, %rdi
2046c2494
< 	xorl	%eax, %eax
---
> 	movb	$0, %al
2047a2496,2502
> .LBB59_2:
> 	addq	$16, %rsp
> 	popq	%rbx
> 	popq	%r14
> 	popq	%rbp
> 	.cfi_def_cfa %rsp, 8
> 	retq
2064,2065c2519,2525
< 	leaq	(,%rsi,4), %rax
< 	addq	(%rdi), %rax
---
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	-16(%rbp), %rax
> 	movq	(%rax), %rax
> 	movq	-8(%rbp), %rcx
> 	shlq	$2, %rcx
> 	addq	%rcx, %rax
2085d2544
< 	pushq	%r14
2087,2092c2546,2551
< 	subq	$32, %rsp
< 	.cfi_offset %rbx, -32
< 	.cfi_offset %r14, -24
< 	movq	%rdi, %rbx
< 	movq	%rsi, -24(%rbp)
< 	leaq	-24(%rbp), %rdi
---
> 	subq	$72, %rsp
> 	.cfi_offset %rbx, -24
> 	movq	%rsi, -16(%rbp)
> 	movq	%rdi, -64(%rbp)
> 	movq	-64(%rbp), %rbx
> 	leaq	-16(%rbp), %rdi
2095c2554
< 	movq	%rax, -40(%rbp)
---
> 	movq	%rax, -56(%rbp)
2098,2100c2557,2559
< 	movq	%rax, -32(%rbp)
< 	leaq	-40(%rbp), %rdi
< 	leaq	-32(%rbp), %rsi
---
> 	movq	%rax, -48(%rbp)
> 	leaq	-56(%rbp), %rdi
> 	leaq	-48(%rbp), %rsi
2102,2105c2561,2565
< 	testb	%al, %al
< 	je	.LBB61_2
< # %bb.1:
< 	leaq	-24(%rbp), %rdi
---
> 	testb	$1, %al
> 	jne	.LBB61_1
> 	jmp	.LBB61_2
> .LBB61_1:
> 	leaq	-16(%rbp), %rdi
2108c2568
< 	movq	%rax, %r14
---
> 	movq	%rax, -40(%rbp)
2110a2571,2575
> 	movq	%rax, -32(%rbp)
> 	movq	-16(%rbp), %rax
> 	movq	%rax, -24(%rbp)
> 	movq	-40(%rbp), %rdi
> 	movq	-32(%rbp), %rsi
2112,2113d2576
< 	movq	%r14, %rdi
< 	movq	%rax, %rsi
2114a2578
> 	movq	%rax, -80(%rbp)
2115a2580,2582
> 	movq	8(%rbx), %rax
> 	addq	$-4, %rax
> 	movq	%rax, 8(%rbx)
2117,2118d2583
< 	addq	$-4, %rsi
< 	movq	%rsi, 8(%rbx)
2121,2122c2586,2589
< 	movq	-24(%rbp), %rax
< 	addq	$32, %rsp
---
> 	movq	-16(%rbp), %rax
> 	movq	%rax, -72(%rbp)
> 	movq	-72(%rbp), %rax
> 	addq	$72, %rsp
2124d2590
< 	popq	%r14
2144d2609
< 	pushq	%r14
2146,2148c2611,2615
< 	.cfi_offset %rbx, -32
< 	.cfi_offset %r14, -24
< 	movq	%rsi, %r14
---
> 	subq	$24, %rsp
> 	.cfi_offset %rbx, -24
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -16(%rbp)
> 	movq	-24(%rbp), %rdi
2151c2618
< 	movq	%r14, %rdi
---
> 	movq	-16(%rbp), %rdi
2153c2620,2621
< 	subq	(%rax), %rbx
---
> 	movq	(%rax), %rax
> 	subq	%rax, %rbx
2155a2624
> 	addq	$24, %rsp
2157d2625
< 	popq	%r14
2178,2179c2646,2648
< 	movq	%rdi, %rsi
< 	leaq	-8(%rbp), %rdi
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rsi
> 	leaq	-16(%rbp), %rdi
2181c2650
< 	movq	-8(%rbp), %rax
---
> 	movq	-16(%rbp), %rax
2202d2670
< 	pushq	%r14
2204,2206c2672,2676
< 	.cfi_offset %rbx, -32
< 	.cfi_offset %r14, -24
< 	movq	%rsi, %r14
---
> 	subq	$24, %rsp
> 	.cfi_offset %rbx, -24
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -16(%rbp)
> 	movq	-24(%rbp), %rdi
2209c2679
< 	movq	%r14, %rdi
---
> 	movq	-16(%rbp), %rdi
2212a2683,2685
> 	andb	$1, %al
> 	movzbl	%al, %eax
> 	addq	$24, %rsp
2214d2686
< 	popq	%r14
2234,2242c2706,2712
< 	pushq	%r15
< 	pushq	%r14
< 	pushq	%rbx
< 	pushq	%rax
< 	.cfi_offset %rbx, -40
< 	.cfi_offset %r14, -32
< 	.cfi_offset %r15, -24
< 	movq	%rdx, %r14
< 	movq	%rsi, %r15
---
> 	subq	$80, %rsp
> 	movq	%rdi, -64(%rbp)
> 	movq	%rsi, -56(%rbp)
> 	movq	%rdx, -48(%rbp)
> 	movq	-64(%rbp), %rax
> 	movq	%rax, -32(%rbp)
> 	movq	-32(%rbp), %rdi
2244,2245c2714,2717
< 	movq	%rax, %rbx
< 	movq	%r15, %rdi
---
> 	movq	%rax, -40(%rbp)
> 	movq	-56(%rbp), %rax
> 	movq	%rax, -16(%rbp)
> 	movq	-16(%rbp), %rdi
2247,2253c2719,2728
< 	movq	%rbx, %rdi
< 	movq	%rax, %rsi
< 	movq	%r14, %rdx
< 	addq	$8, %rsp
< 	popq	%rbx
< 	popq	%r14
< 	popq	%r15
---
> 	movq	%rax, -24(%rbp)
> 	movq	-48(%rbp), %rax
> 	movq	%rax, -8(%rbp)
> 	movq	-40(%rbp), %rdi
> 	movq	-24(%rbp), %rsi
> 	movq	-8(%rbp), %rdx
> 	callq	_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET1_T0_S8_S7_
> 	movq	%rax, -72(%rbp)
> 	movq	-72(%rbp), %rax
> 	addq	$80, %rsp
2256c2731
< 	jmp	_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET1_T0_S8_S7_ # TAILCALL
---
> 	retq
2272a2748,2754
> 	subq	$16, %rsp
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	-16(%rbp), %rdi
> 	movq	-8(%rbp), %rsi
> 	callq	_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_
> 	addq	$16, %rsp
2275c2757
< 	jmp	_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ # TAILCALL
---
> 	retq
2292d2773
< 	pushq	%r15
2295,2300c2776,2786
< 	pushq	%rax
< 	.cfi_offset %rbx, -40
< 	.cfi_offset %r14, -32
< 	.cfi_offset %r15, -24
< 	movq	%rdx, %r14
< 	movq	%rsi, %rbx
---
> 	subq	$64, %rsp
> 	.cfi_offset %rbx, -32
> 	.cfi_offset %r14, -24
> 	movq	%rdi, -72(%rbp)
> 	movq	%rsi, -64(%rbp)
> 	movq	%rdx, -24(%rbp)
> 	movq	-24(%rbp), %rax
> 	movq	%rax, -56(%rbp)
> 	movq	-72(%rbp), %rax
> 	movq	%rax, -48(%rbp)
> 	movq	-48(%rbp), %rdi
2302,2303c2788,2791
< 	movq	%rax, %r15
< 	movq	%rbx, %rdi
---
> 	movq	%rax, %r14
> 	movq	-64(%rbp), %rax
> 	movq	%rax, -40(%rbp)
> 	movq	-40(%rbp), %rdi
2306c2794,2796
< 	movq	%r14, %rdi
---
> 	movq	-24(%rbp), %rax
> 	movq	%rax, -32(%rbp)
> 	movq	-32(%rbp), %rdi
2308c2798
< 	movq	%r15, %rdi
---
> 	movq	%r14, %rdi
2312c2802
< 	movq	%r14, %rdi
---
> 	movq	-56(%rbp), %rdi
2314c2804,2807
< 	addq	$8, %rsp
---
> 	callq	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_
> 	movq	%rax, -80(%rbp)
> 	movq	-80(%rbp), %rax
> 	addq	$64, %rsp
2317d2809
< 	popq	%r15
2320c2812
< 	jmp	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_ # TAILCALL
---
> 	retq
2337c2829,2832
< 	movq	%rdi, %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
> 	movq	%rax, -16(%rbp)
> 	movq	-16(%rbp), %rax
2358c2853
< 	pushq	%rax
---
> 	subq	$40, %rsp
2360d2854
< 	movq	%rsi, %rbx
2361a2856,2860
> 	movq	%rsi, -32(%rbp)
> 	movq	-32(%rbp), %rbx
> 	movq	-16(%rbp), %rax
> 	movq	%rax, -24(%rbp)
> 	movq	-24(%rbp), %rdi
2368c2867,2869
< 	addq	$8, %rsp
---
> 	movq	%rax, -40(%rbp)
> 	movq	-40(%rbp), %rax
> 	addq	$40, %rsp
2388a2890,2899
> 	subq	$32, %rsp
> 	movq	%rdi, -32(%rbp)
> 	movq	%rsi, -24(%rbp)
> 	movq	%rdx, -16(%rbp)
> 	movb	$1, -1(%rbp)
> 	movq	-32(%rbp), %rdi
> 	movq	-24(%rbp), %rsi
> 	movq	-16(%rbp), %rdx
> 	callq	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
> 	addq	$32, %rsp
2391c2902
< 	jmp	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ # TAILCALL
---
> 	retq
2433,2440c2944,2953
< 	pushq	%r14
< 	pushq	%rbx
< 	.cfi_offset %rbx, -32
< 	.cfi_offset %r14, -24
< 	movq	%rdx, %r14
< 	movq	%rsi, %rbx
< 	subq	%rdi, %rbx
< 	sarq	$2, %rbx
---
> 	subq	$32, %rsp
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -32(%rbp)
> 	movq	%rdx, -16(%rbp)
> 	movq	-32(%rbp), %rax
> 	movq	-24(%rbp), %rcx
> 	subq	%rcx, %rax
> 	sarq	$2, %rax
> 	movq	%rax, -8(%rbp)
> 	cmpq	$0, -8(%rbp)
2443,2445c2956,2959
< 	movq	%rdi, %rsi
< 	leaq	(,%rbx,4), %rdx
< 	movq	%r14, %rdi
---
> 	movq	-16(%rbp), %rdi
> 	movq	-24(%rbp), %rsi
> 	movq	-8(%rbp), %rdx
> 	shlq	$2, %rdx
2448,2450c2962,2966
< 	leaq	(%r14,%rbx,4), %rax
< 	popq	%rbx
< 	popq	%r14
---
> 	movq	-16(%rbp), %rax
> 	movq	-8(%rbp), %rcx
> 	shlq	$2, %rcx
> 	addq	%rcx, %rax
> 	addq	$32, %rsp
2469a2986,2987
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
2489c3007,3008
< 	movq	%rdi, %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
2509,2510c3028,3033
< 	movq	(%rsi), %rax
< 	movq	%rax, (%rdi)
---
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	-16(%rbp), %rax
> 	movq	-8(%rbp), %rcx
> 	movq	(%rcx), %rcx
> 	movq	%rcx, (%rax)
2530d3052
< 	pushq	%r14
2532,2534c3054,3058
< 	.cfi_offset %rbx, -32
< 	.cfi_offset %r14, -24
< 	movq	%rsi, %r14
---
> 	subq	$24, %rsp
> 	.cfi_offset %rbx, -24
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -16(%rbp)
> 	movq	-24(%rbp), %rdi
2537c3061
< 	movq	%r14, %rdi
---
> 	movq	-16(%rbp), %rdi
2539c3063,3064
< 	subq	(%rax), %rbx
---
> 	movq	(%rax), %rax
> 	subq	%rax, %rbx
2541a3067
> 	addq	$24, %rsp
2543d3068
< 	popq	%r14
2563d3087
< 	pushq	%r14
2565,2567c3089,3093
< 	.cfi_offset %rbx, -32
< 	.cfi_offset %r14, -24
< 	movq	%rsi, %r14
---
> 	subq	$24, %rsp
> 	.cfi_offset %rbx, -24
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -16(%rbp)
> 	movq	-24(%rbp), %rdi
2570c3096
< 	movq	%r14, %rdi
---
> 	movq	-16(%rbp), %rdi
2573a3100,3102
> 	andb	$1, %al
> 	movzbl	%al, %eax
> 	addq	$24, %rsp
2575d3103
< 	popq	%r14
2595d3122
< 	pushq	%r15
2598,2604c3125,3134
< 	pushq	%rax
< 	.cfi_offset %rbx, -40
< 	.cfi_offset %r14, -32
< 	.cfi_offset %r15, -24
< 	movq	%rdx, %r14
< 	movq	%rsi, %rbx
< 	movq	%rsi, (%rdi)
---
> 	subq	$32, %rsp
> 	.cfi_offset %rbx, -32
> 	.cfi_offset %r14, -24
> 	movq	%rdi, -40(%rbp)
> 	movq	%rsi, -32(%rbp)
> 	movq	%rdx, -24(%rbp)
> 	movq	-40(%rbp), %rdi
> 	movq	-32(%rbp), %rax
> 	movq	%rax, (%rdi)
> 	movq	(%rdi), %r14
2606,2607c3136,3137
< 	movq	%rax, %r15
< 	movq	%r14, %rdi
---
> 	movq	%rax, %rbx
> 	movq	-24(%rbp), %rdi
2609,2610c3139,3140
< 	movq	%rbx, %rdi
< 	movq	%r15, %rsi
---
> 	movq	%r14, %rdi
> 	movq	%rbx, %rsi
2612c3142,3143
< 	addq	$8, %rsp
---
> 	callq	_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_
> 	addq	$32, %rsp
2615d3145
< 	popq	%r15
2618c3148
< 	jmp	_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ # TAILCALL
---
> 	retq
2635d3164
< 	pushq	%r15
2638,2646c3167,3176
< 	pushq	%rax
< 	.cfi_offset %rbx, -40
< 	.cfi_offset %r14, -32
< 	.cfi_offset %r15, -24
< 	movq	%rdx, %r14
< 	movq	%rdi, %rbx
< 	movq	%rsi, -32(%rbp)
< 	movq	8(%rdi), %r15
< 	leaq	-4(%r15), %rdi
---
> 	subq	$32, %rsp
> 	.cfi_offset %rbx, -32
> 	.cfi_offset %r14, -24
> 	movq	%rsi, -24(%rbp)
> 	movq	%rdi, -40(%rbp)
> 	movq	%rdx, -32(%rbp)
> 	movq	-40(%rbp), %rbx
> 	movq	8(%rbx), %r14
> 	movq	8(%rbx), %rdi
> 	addq	$-4, %rdi
2649c3179
< 	movq	%r15, %rsi
---
> 	movq	%r14, %rsi
2652,2654c3182,3185
< 	addq	$4, 8(%rbx)
< 	leaq	-32(%rbp), %r15
< 	movq	%r15, %rdi
---
> 	movq	8(%rbx), %rax
> 	addq	$4, %rax
> 	movq	%rax, 8(%rbx)
> 	leaq	-24(%rbp), %rdi
2656a3188,3189
> 	movq	8(%rbx), %rsi
> 	addq	$-8, %rsi
2658d3190
< 	leaq	-8(%rdx), %rsi
2661c3193
< 	movq	%r14, %rdi
---
> 	movq	-32(%rbp), %rdi
2664c3196
< 	movq	%r15, %rdi
---
> 	leaq	-24(%rbp), %rdi
2667c3199
< 	addq	$8, %rsp
---
> 	addq	$32, %rsp
2670d3201
< 	popq	%r15
2690c3221,3222
< 	movq	%rdi, %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
2709a3242,3246
> 	subq	$16, %rsp
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rdi
> 	callq	_ZNSt6vectorIiSaIiEE16_Temporary_value6_M_ptrEv
> 	addq	$16, %rsp
2712c3249
< 	jmp	_ZNSt6vectorIiSaIiEE16_Temporary_value6_M_ptrEv # TAILCALL
---
> 	retq
2721a3259
> .Lfunc_begin4:
2722a3261,3262
> 	.cfi_personality 3, __gxx_personality_v0
> 	.cfi_lsda 3, .Lexception4
2731a3272,3273
> 	movq	%rdi, -16(%rbp)
> 	movq	-16(%rbp), %rdi
2732a3275
> .Ltmp57:
2733a3277,3279
> .Ltmp58:
> 	jmp	.LBB82_1
> .LBB82_1:
2735a3282
> 	callq	_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_
2740c3287,3293
< 	jmp	_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ # TAILCALL
---
> 	retq
> .LBB82_2:
> 	.cfi_def_cfa %rbp, 16
> .Ltmp59:
>                                         # kill: killed $rdx
> 	movq	%rax, %rdi
> 	callq	__clang_call_terminate
2743a3297,3320
> 	.section	.gcc_except_table,"a",@progbits
> 	.p2align	2
> GCC_except_table82:
> .Lexception4:
> 	.byte	255                     # @LPStart Encoding = omit
> 	.byte	3                       # @TType Encoding = udata4
> 	.uleb128 .Lttbase2-.Lttbaseref2
> .Lttbaseref2:
> 	.byte	1                       # Call site Encoding = uleb128
> 	.uleb128 .Lcst_end4-.Lcst_begin4
> .Lcst_begin4:
> 	.uleb128 .Ltmp57-.Lfunc_begin4  # >> Call Site 1 <<
> 	.uleb128 .Ltmp58-.Ltmp57        #   Call between .Ltmp57 and .Ltmp58
> 	.uleb128 .Ltmp59-.Lfunc_begin4  #     jumps to .Ltmp59
> 	.byte	1                       #   On action: 1
> .Lcst_end4:
> 	.byte	1                       # >> Action Record 1 <<
>                                         #   Catch TypeInfo 1
> 	.byte	0                       #   No further actions
> 	.p2align	2
>                                         # >> Catch TypeInfos <<
> 	.long	0                       # TypeInfo 1
> .Lttbase2:
> 	.p2align	2
2757c3334,3336
< 	leaq	8(%rdi), %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
> 	addq	$8, %rax
2778a3358
> 	subq	$32, %rsp
2781,2783c3361,3366
< 	movq	%rsi, %r14
< 	movq	%rdi, %rbx
< 	movq	%rdx, %rdi
---
> 	movq	%rdi, -40(%rbp)
> 	movq	%rsi, -32(%rbp)
> 	movq	%rdx, -24(%rbp)
> 	movq	-40(%rbp), %r14
> 	movq	-32(%rbp), %rbx
> 	movq	-24(%rbp), %rdi
2785,2786c3368,3369
< 	movq	%rbx, %rdi
< 	movq	%r14, %rsi
---
> 	movq	%r14, %rdi
> 	movq	%rbx, %rsi
2787a3371,3372
> 	callq	_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_
> 	addq	$32, %rsp
2792c3377
< 	jmp	_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_ # TAILCALL
---
> 	retq
2809,2810d3393
< 	pushq	%r15
< 	pushq	%r14
2812,2817c3395,3400
< 	pushq	%rax
< 	.cfi_offset %rbx, -40
< 	.cfi_offset %r14, -32
< 	.cfi_offset %r15, -24
< 	movq	%rdx, %r14
< 	movq	%rsi, %r15
---
> 	subq	$24, %rsp
> 	.cfi_offset %rbx, -24
> 	movq	%rdi, -32(%rbp)
> 	movq	%rsi, -24(%rbp)
> 	movq	%rdx, -16(%rbp)
> 	movq	-32(%rbp), %rdi
2820c3403
< 	movq	%r15, %rdi
---
> 	movq	-24(%rbp), %rdi
2821a3405
> 	movq	-16(%rbp), %rdx
2824,2825c3408,3409
< 	movq	%r14, %rdx
< 	addq	$8, %rsp
---
> 	callq	_ZSt23__copy_move_backward_a2ILb1EPiS0_ET1_T0_S2_S1_
> 	addq	$24, %rsp
2827,2828d3410
< 	popq	%r14
< 	popq	%r15
2831c3413
< 	jmp	_ZSt23__copy_move_backward_a2ILb1EPiS0_ET1_T0_S2_S1_ # TAILCALL
---
> 	retq
2848c3430,3431
< 	movq	%rdi, %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
2868c3451,3453
< 	movq	(%rdi), %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
> 	movq	(%rax), %rax
2889c3474
< 	pushq	%rax
---
> 	subq	$24, %rsp
2891,2892c3476,3480
< 	movq	%rdx, %rdi
< 	movq	%rsi, %rbx
---
> 	movq	%rdi, -32(%rbp)
> 	movq	%rsi, -24(%rbp)
> 	movq	%rdx, -16(%rbp)
> 	movq	-24(%rbp), %rbx
> 	movq	-16(%rbp), %rdi
2896c3484
< 	addq	$8, %rsp
---
> 	addq	$24, %rsp
2919c3507
< 	subq	$16, %rsp
---
> 	subq	$32, %rsp
2922c3510,3511
< 	movq	%rsi, %rbx
---
> 	movq	%rdi, -40(%rbp)
> 	movq	%rsi, -32(%rbp)
2923a3513
> 	movq	-40(%rbp), %rdi
2926c3516
< 	movq	%rbx, %rdi
---
> 	movq	-32(%rbp), %rdi
2938c3528
< 	addq	$16, %rsp
---
> 	addq	$32, %rsp
2960c3550,3551
< 	movq	%rdi, %rax
---
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rax
2980c3571,3573
< 	movq	%rsi, %rax
---
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	-8(%rbp), %rax
2999a3593,3602
> 	subq	$32, %rsp
> 	movq	%rdi, -32(%rbp)
> 	movq	%rsi, -24(%rbp)
> 	movq	%rdx, -16(%rbp)
> 	movb	$1, -1(%rbp)
> 	movq	-32(%rbp), %rdi
> 	movq	-24(%rbp), %rsi
> 	movq	-16(%rbp), %rdx
> 	callq	_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIiEEPT_PKS3_S6_S4_
> 	addq	$32, %rsp
3002c3605
< 	jmp	_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIiEEPT_PKS3_S6_S4_ # TAILCALL
---
> 	retq
3019,3026c3622,3631
< 	pushq	%r14
< 	pushq	%rbx
< 	.cfi_offset %rbx, -32
< 	.cfi_offset %r14, -24
< 	movq	%rdx, %r14
< 	movq	%rsi, %rbx
< 	subq	%rdi, %rbx
< 	sarq	$2, %rbx
---
> 	subq	$32, %rsp
> 	movq	%rdi, -24(%rbp)
> 	movq	%rsi, -32(%rbp)
> 	movq	%rdx, -16(%rbp)
> 	movq	-32(%rbp), %rax
> 	movq	-24(%rbp), %rcx
> 	subq	%rcx, %rax
> 	sarq	$2, %rax
> 	movq	%rax, -8(%rbp)
> 	cmpq	$0, -8(%rbp)
3029,3032c3634,3641
< 	movq	%rdi, %rsi
< 	leaq	(,%rbx,4), %rdx
< 	movq	%r14, %rdi
< 	subq	%rdx, %rdi
---
> 	xorl	%eax, %eax
> 	movq	-16(%rbp), %rdi
> 	subq	-8(%rbp), %rax
> 	shlq	$2, %rax
> 	addq	%rax, %rdi
> 	movq	-24(%rbp), %rsi
> 	movq	-8(%rbp), %rdx
> 	shlq	$2, %rdx
3035,3039c3644,3649
< 	shlq	$2, %rbx
< 	subq	%rbx, %r14
< 	movq	%r14, %rax
< 	popq	%rbx
< 	popq	%r14
---
> 	xorl	%ecx, %ecx
> 	movq	-16(%rbp), %rax
> 	subq	-8(%rbp), %rcx
> 	shlq	$2, %rcx
> 	addq	%rcx, %rax
> 	addq	$32, %rsp
3058a3669,3676
> 	subq	$32, %rsp
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	%rdx, -24(%rbp)
> 	movq	-16(%rbp), %rdi
> 	movq	-8(%rbp), %rsi
> 	callq	_ZSt8_DestroyIPiEvT_S1_
> 	addq	$32, %rsp
3061c3679
< 	jmp	_ZSt8_DestroyIPiEvT_S1_ # TAILCALL
---
> 	retq
3070a3689
> .Lfunc_begin5:
3071a3691,3692
> 	.cfi_personality 3, __gxx_personality_v0
> 	.cfi_lsda 3, .Lexception5
3079c3700
< 	pushq	%rax
---
> 	subq	$24, %rsp
3081,3083c3702,3705
< 	movq	%rdi, %rbx
< 	movq	(%rdi), %rsi
< 	movq	16(%rdi), %rdx
---
> 	movq	%rdi, -24(%rbp)
> 	movq	-24(%rbp), %rbx
> 	movq	(%rbx), %rsi
> 	movq	16(%rbx), %rdx
3085a3708,3709
> .Ltmp60:
> 	movq	%rbx, %rdi
3086a3711,3713
> .Ltmp61:
> 	jmp	.LBB95_1
> .LBB95_1:
3088c3715,3716
< 	addq	$8, %rsp
---
> 	callq	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev
> 	addq	$24, %rsp
3092c3720,3730
< 	jmp	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev # TAILCALL
---
> 	retq
> .LBB95_2:
> 	.cfi_def_cfa %rbp, 16
> .Ltmp62:
> 	movq	%rax, -16(%rbp)
> 	movl	%edx, -28(%rbp)
> 	movq	%rbx, %rdi
> 	callq	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev
> # %bb.3:
> 	movq	-16(%rbp), %rdi
> 	callq	__clang_call_terminate
3095a3734,3757
> 	.section	.gcc_except_table,"a",@progbits
> 	.p2align	2
> GCC_except_table95:
> .Lexception5:
> 	.byte	255                     # @LPStart Encoding = omit
> 	.byte	3                       # @TType Encoding = udata4
> 	.uleb128 .Lttbase3-.Lttbaseref3
> .Lttbaseref3:
> 	.byte	1                       # Call site Encoding = uleb128
> 	.uleb128 .Lcst_end5-.Lcst_begin5
> .Lcst_begin5:
> 	.uleb128 .Ltmp60-.Lfunc_begin5  # >> Call Site 1 <<
> 	.uleb128 .Ltmp61-.Ltmp60        #   Call between .Ltmp60 and .Ltmp61
> 	.uleb128 .Ltmp62-.Lfunc_begin5  #     jumps to .Ltmp62
> 	.byte	1                       #   On action: 1
> .Lcst_end5:
> 	.byte	1                       # >> Action Record 1 <<
>                                         #   Catch TypeInfo 1
> 	.byte	0                       #   No further actions
> 	.p2align	2
>                                         # >> Catch TypeInfos <<
> 	.long	0                       # TypeInfo 1
> .Lttbase3:
> 	.p2align	2
3108a3771,3777
> 	subq	$16, %rsp
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
> 	movq	-16(%rbp), %rdi
> 	movq	-8(%rbp), %rsi
> 	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_
> 	addq	$16, %rsp
3111c3780
< 	jmp	_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ # TAILCALL
---
> 	retq
3127a3797,3798
> 	movq	%rdi, -16(%rbp)
> 	movq	%rsi, -8(%rbp)
3146a3818,3822
> 	subq	$16, %rsp
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rdi
> 	callq	_ZNSaIiED2Ev
> 	addq	$16, %rsp
3149c3825
< 	jmp	_ZNSaIiED2Ev            # TAILCALL
---
> 	retq
3165a3842,3846
> 	subq	$16, %rsp
> 	movq	%rdi, -8(%rbp)
> 	movq	-8(%rbp), %rdi
> 	callq	_ZN9__gnu_cxx13new_allocatorIiED2Ev
> 	addq	$16, %rsp
3168c3849
< 	jmp	_ZN9__gnu_cxx13new_allocatorIiED2Ev # TAILCALL
---
> 	retq
3184a3866
> 	movq	%rdi, -8(%rbp)
3193,3195c3875,3877
< 	.p2align	4, 0x90         # -- Begin function 
< 	.type	__unnamed_9,@function
< __unnamed_9:                            # @8
---
> 	.p2align	4, 0x90         # -- Begin function _GLOBAL__sub_I_toy_file.cpp
> 	.type	_GLOBAL__sub_I_toy_file.cpp,@function
> _GLOBAL__sub_I_toy_file.cpp:            # @_GLOBAL__sub_I_toy_file.cpp
3202a3885
> 	callq	__cxx_global_var_init
3205c3888
< 	jmp	__unnamed_1             # TAILCALL
---
> 	retq
3207c3890
< 	.size	__unnamed_9, .Lfunc_end101-__unnamed_9
---
> 	.size	_GLOBAL__sub_I_toy_file.cpp, .Lfunc_end101-_GLOBAL__sub_I_toy_file.cpp
3210,3212c3893,3895
< 	.type	__unnamed_2,@object     # @0
< 	.local	__unnamed_2
< 	.comm	__unnamed_2,1,1
---
> 	.type	_ZStL8__ioinit,@object  # @_ZStL8__ioinit
> 	.local	_ZStL8__ioinit
> 	.comm	_ZStL8__ioinit,1,1
3214c3897
< 	.type	.L__unnamed_3,@object   # @1
---
> 	.type	.L.str,@object          # @.str
3216c3899
< .L__unnamed_3:
---
> .L.str:
3218c3901
< 	.size	.L__unnamed_3, 2
---
> 	.size	.L.str, 2
3220,3221c3903,3904
< 	.type	.L__unnamed_4,@object   # @2
< .L__unnamed_4:
---
> 	.type	.L.str.1,@object        # @.str.1
> .L.str.1:
3223c3906
< 	.size	.L__unnamed_4, 23
---
> 	.size	.L.str.1, 23
3225,3226c3908,3909
< 	.type	.L__unnamed_5,@object   # @3
< .L__unnamed_5:
---
> 	.type	.L.str.2,@object        # @.str.2
> .L.str.2:
3228c3911
< 	.size	.L__unnamed_5, 17
---
> 	.size	.L.str.2, 17
3230,3231c3913,3914
< 	.type	.L__unnamed_6,@object   # @4
< .L__unnamed_6:
---
> 	.type	.L.str.3,@object        # @.str.3
> .L.str.3:
3233c3916
< 	.size	.L__unnamed_6, 11
---
> 	.size	.L.str.3, 11
3235,3236c3918,3919
< 	.type	.L__unnamed_7,@object   # @5
< .L__unnamed_7:
---
> 	.type	.L.str.4,@object        # @.str.4
> .L.str.4:
3238c3921
< 	.size	.L__unnamed_7, 26
---
> 	.size	.L.str.4, 26
3240,3241c3923,3924
< 	.type	.L__unnamed_8,@object   # @6
< .L__unnamed_8:
---
> 	.type	.L.str.5,@object        # @.str.5
> .L.str.5:
3243c3926
< 	.size	.L__unnamed_8, 74
---
> 	.size	.L.str.5, 74
3247c3930
< 	.quad	__unnamed_9
---
> 	.quad	_GLOBAL__sub_I_toy_file.cpp
