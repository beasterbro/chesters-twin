_________________________________________________________________

Name:		Emily Howell	Adam Stewart 	Ally Dinhofer 
Case ID: 	eth35 		axs1477		abd54
_________________________________________________________________

Specks of the first computer used for this project:
Processor: Intel 10th Gen core i7 1065G7 @ 1.30 Ghz
Operating System: Windows 10 Home

Specks of the second computer used for this project:
Processor: Intel 10th Gen core i7 8550U @ 1.80 Ghz Ghz
Operating System: Ubuntu 20.04.1 LTS through the VM image provided in class
_________________________________________________________________

Running our code using the Makefile:
We created a makefile to make running the codebase more efficient.

make clean		-> cleans out the old 
make toy_input.o		-> compiles the C++ program that uses standard input
make toy_command.o	-> compiles the C++ program that gets input from the command line
make toy_file.o		-> compiles the C++ program that uses input from a file
make code		-> generates the assembly file
make ir			-> generates the intermediate representation
make opt1		-> optimization code using the -O1 optimization tag
make opt2		-> optimization code using the -Oz optimization tag
make analy		-> runs all of the analysis tags that we found were effective
make transf		-> runs all of the transform tags that we found were effective
make util		-> runs all of the utility tags that we found were effetive (none)
make all			-> runs all the optimization, analysis, transform, and utility transforms that we found were effective
make diff		-> generates the diff files for the compiled code
			-> there are separate tags for each of the diff commands but this will generate all of the diff files. 
make 			-> runs make toy_file.o, code, ir, opt1, opt2, analy, transf, util, all, and diff
_________________________________________________________________

Directory map:
./compiled			:Directory where all compiled code is stored
	/all			:Code generated from running 'make all'
	/analysis		:Code generated from running 'make analy'
	/assembly		:Code generated from running 'make code'
	/base			:Code generated from running 'make toy_input.o', 'make toy_command.o', or 'make toy_file.o'
	/ir			:Code generated from running 'make ir'
	/opt 1			:Code generated from running 'make opt1'
	/opt 2			:Code generated from running 'make opt2'
	/transform		:Code generated from running 'make transf'
	/utility			:Code generated from running 'make util'
./C++_test_code			:Directory for storing the three c++ test programs we wrote
./diff				:Directory containing all the diff files of the optimized assembly codes
./dotfiles			:Directory for storing the .dot files generated by analysis
	/all_run_dotfiles	:Dot files generated by running 'make all'
	/analysis_dotfiles	:Dot files generated by running 'make analy'
./Project Instructions		:Contains the given instructions for this project
./test				:Contains a text file with set of integers used to do test runs of our code
